{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/assertThisInitialized","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./MapMarker","data":{"isAsync":false}},{"name":"./MapPolyline","data":{"isAsync":false}},{"name":"./MapPolygon","data":{"isAsync":false}},{"name":"./MapCircle","data":{"isAsync":false}},{"name":"./MapCallout","data":{"isAsync":false}},{"name":"./MapOverlay","data":{"isAsync":false}},{"name":"./MapUrlTile","data":{"isAsync":false}},{"name":"./MapLocalTile","data":{"isAsync":false}},{"name":"./AnimatedRegion","data":{"isAsync":false}},{"name":"./decorateMapComponent","data":{"isAsync":false}},{"name":"./ProviderConstants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.ProviderPropType = exports.Animated = exports.MAP_TYPES = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _assertThisInitialized2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/assertThisInitialized\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[15], \"react-native\");\n\n  var _MapMarker = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[16], \"./MapMarker\"));\n\n  var _MapPolyline = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"./MapPolyline\"));\n\n  var _MapPolygon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[18], \"./MapPolygon\"));\n\n  var _MapCircle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[19], \"./MapCircle\"));\n\n  var _MapCallout = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[20], \"./MapCallout\"));\n\n  var _MapOverlay = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[21], \"./MapOverlay\"));\n\n  var _MapUrlTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[22], \"./MapUrlTile\"));\n\n  var _MapLocalTile = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[23], \"./MapLocalTile\"));\n\n  var _AnimatedRegion = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[24], \"./AnimatedRegion\"));\n\n  var _decorateMapComponent = _$$_REQUIRE(_dependencyMap[25], \"./decorateMapComponent\");\n\n  var ProviderConstants = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[26], \"./ProviderConstants\"));\n\n  var _jsxFileName = \"/home/nurchulis/Documents/ngantri/ngantri-android-operator/node_modules/react-native-maps/lib/components/MapView.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    MapView: {\n      displayName: \"MapView\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/nurchulis/Documents/ngantri/ngantri-android-operator/node_modules/react-native-maps/lib/components/MapView.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var MAP_TYPES = {\n    STANDARD: 'standard',\n    SATELLITE: 'satellite',\n    HYBRID: 'hybrid',\n    TERRAIN: 'terrain',\n    NONE: 'none',\n    MUTEDSTANDARD: 'mutedStandard'\n  };\n  exports.MAP_TYPES = MAP_TYPES;\n  var GOOGLE_MAPS_ONLY_TYPES = [MAP_TYPES.TERRAIN, MAP_TYPES.NONE];\n  var viewConfig = {\n    uiViewClassName: 'AIR<provider>Map',\n    validAttributes: {\n      region: true\n    }\n  };\n\n  var CameraShape = _propTypes.default.shape({\n    center: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired\n    }),\n    pitch: _propTypes.default.number.isRequired,\n    heading: _propTypes.default.number.isRequired,\n    altitude: _propTypes.default.number.isRequired,\n    zoom: _propTypes.default.number.isRequired\n  });\n\n  var viewPropTypes = _reactNative.ViewPropTypes || _reactNative.View.propTypes;\n\n  var propTypes = _objectSpread({}, viewPropTypes, {\n    provider: _propTypes.default.oneOf(['google']),\n    style: viewPropTypes.style,\n    customMapStyle: _propTypes.default.array,\n    customMapStyleString: _propTypes.default.string,\n    showsUserLocation: _propTypes.default.bool,\n    userLocationAnnotationTitle: _propTypes.default.string,\n    showsMyLocationButton: _propTypes.default.bool,\n    followsUserLocation: _propTypes.default.bool,\n    showsPointsOfInterest: _propTypes.default.bool,\n    showsCompass: _propTypes.default.bool,\n    zoomEnabled: _propTypes.default.bool,\n    zoomControlEnabled: _propTypes.default.bool,\n    rotateEnabled: _propTypes.default.bool,\n    cacheEnabled: _propTypes.default.bool,\n    loadingEnabled: _propTypes.default.bool,\n    loadingBackgroundColor: _reactNative.ColorPropType,\n    loadingIndicatorColor: _reactNative.ColorPropType,\n    scrollEnabled: _propTypes.default.bool,\n    pitchEnabled: _propTypes.default.bool,\n    toolbarEnabled: _propTypes.default.bool,\n    moveOnMarkerPress: _propTypes.default.bool,\n    showsScale: _propTypes.default.bool,\n    showsBuildings: _propTypes.default.bool,\n    showsTraffic: _propTypes.default.bool,\n    showsIndoors: _propTypes.default.bool,\n    showsIndoorLevelPicker: _propTypes.default.bool,\n    mapType: _propTypes.default.oneOf(Object.values(MAP_TYPES)),\n    region: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired,\n      latitudeDelta: _propTypes.default.number.isRequired,\n      longitudeDelta: _propTypes.default.number.isRequired\n    }),\n    initialRegion: _propTypes.default.shape({\n      latitude: _propTypes.default.number.isRequired,\n      longitude: _propTypes.default.number.isRequired,\n      latitudeDelta: _propTypes.default.number.isRequired,\n      longitudeDelta: _propTypes.default.number.isRequired\n    }),\n    camera: CameraShape,\n    initialCamera: CameraShape,\n    liteMode: _propTypes.default.bool,\n    mapPadding: _reactNative.EdgeInsetsPropType,\n    paddingAdjustmentBehavior: _propTypes.default.oneOf(['always', 'automatic', 'never']),\n    maxDelta: _propTypes.default.number,\n    minDelta: _propTypes.default.number,\n    legalLabelInsets: _reactNative.EdgeInsetsPropType,\n    onMapReady: _propTypes.default.func,\n    onKmlReady: _propTypes.default.func,\n    onRegionChange: _propTypes.default.func,\n    onRegionChangeComplete: _propTypes.default.func,\n    onPress: _propTypes.default.func,\n    onLongPress: _propTypes.default.func,\n    onUserLocationChange: _propTypes.default.func,\n    onPanDrag: _propTypes.default.func,\n    onPoiClick: _propTypes.default.func,\n    onMarkerPress: _propTypes.default.func,\n    onMarkerSelect: _propTypes.default.func,\n    onMarkerDeselect: _propTypes.default.func,\n    onCalloutPress: _propTypes.default.func,\n    onMarkerDragStart: _propTypes.default.func,\n    onMarkerDrag: _propTypes.default.func,\n    onMarkerDragEnd: _propTypes.default.func,\n    minZoomLevel: _propTypes.default.number,\n    maxZoomLevel: _propTypes.default.number,\n    kmlSrc: _propTypes.default.string,\n    onIndoorLevelActivated: _propTypes.default.func,\n    onIndoorBuildingFocused: _propTypes.default.func\n  });\n\n  var MapView = function (_React$Component) {\n    (0, _inherits2.default)(MapView, _React$Component);\n\n    function MapView(props) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, MapView);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(MapView).call(this, props));\n      _this.state = {\n        isReady: _reactNative.Platform.OS === 'ios'\n      };\n      _this._onMapReady = _this._onMapReady.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onMarkerPress = _this._onMarkerPress.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onChange = _this._onChange.bind((0, _assertThisInitialized2.default)(_this));\n      _this._onLayout = _this._onLayout.bind((0, _assertThisInitialized2.default)(_this));\n      return _this;\n    }\n\n    (0, _createClass2.default)(MapView, [{\n      key: \"getChildContext\",\n      value: function getChildContext() {\n        return {\n          provider: this.props.provider\n        };\n      }\n    }, {\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(nextProps) {\n        var a = this.__lastRegion;\n        var b = nextProps.region;\n        if (!a || !b) return;\n\n        if (a.latitude !== b.latitude || a.longitude !== b.longitude || a.latitudeDelta !== b.latitudeDelta || a.longitudeDelta !== b.longitudeDelta) {\n          this.map.setNativeProps({\n            region: b\n          });\n        }\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var isReady = this.state.isReady;\n\n        if (isReady) {\n          this._updateStyle();\n        }\n      }\n    }, {\n      key: \"_updateStyle\",\n      value: function _updateStyle() {\n        var customMapStyle = this.props.customMapStyle;\n        this.map.setNativeProps({\n          customMapStyleString: JSON.stringify(customMapStyle)\n        });\n      }\n    }, {\n      key: \"_onMapReady\",\n      value: function _onMapReady() {\n        var _this$props = this.props,\n            region = _this$props.region,\n            initialRegion = _this$props.initialRegion,\n            onMapReady = _this$props.onMapReady;\n\n        if (region) {\n          this.map.setNativeProps({\n            region: region\n          });\n        } else if (initialRegion) {\n          this.map.setNativeProps({\n            initialRegion: initialRegion\n          });\n        }\n\n        this._updateStyle();\n\n        this.setState({\n          isReady: true\n        }, function () {\n          if (onMapReady) onMapReady();\n        });\n      }\n    }, {\n      key: \"_onLayout\",\n      value: function _onLayout(e) {\n        var layout = e.nativeEvent.layout;\n        if (!layout.width || !layout.height) return;\n\n        if (this.state.isReady && !this.__layoutCalled) {\n          var _this$props2 = this.props,\n              region = _this$props2.region,\n              initialRegion = _this$props2.initialRegion;\n\n          if (region) {\n            this.__layoutCalled = true;\n            this.map.setNativeProps({\n              region: region\n            });\n          } else if (initialRegion) {\n            this.__layoutCalled = true;\n            this.map.setNativeProps({\n              initialRegion: initialRegion\n            });\n          }\n        }\n\n        if (this.props.onLayout) {\n          this.props.onLayout(e);\n        }\n      }\n    }, {\n      key: \"_onMarkerPress\",\n      value: function _onMarkerPress(event) {\n        if (this.props.onMarkerPress) {\n          this.props.onMarkerPress(event.nativeEvent);\n        }\n      }\n    }, {\n      key: \"_onChange\",\n      value: function _onChange(event) {\n        this.__lastRegion = event.nativeEvent.region;\n\n        if (event.nativeEvent.continuous) {\n          if (this.props.onRegionChange) {\n            this.props.onRegionChange(event.nativeEvent.region);\n          }\n        } else if (this.props.onRegionChangeComplete) {\n          this.props.onRegionChangeComplete(event.nativeEvent.region);\n        }\n      }\n    }, {\n      key: \"getCamera\",\n      value: function getCamera() {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.getCamera(this._getHandle());\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('getCamera', []);\n        }\n\n        return Promise.reject('getCamera not supported on this platform');\n      }\n    }, {\n      key: \"setCamera\",\n      value: function setCamera(camera) {\n        this._runCommand('setCamera', [camera]);\n      }\n    }, {\n      key: \"animateCamera\",\n      value: function animateCamera(camera, opts) {\n        this._runCommand('animateCamera', [camera, opts && opts.duration || 500]);\n      }\n    }, {\n      key: \"animateToNavigation\",\n      value: function animateToNavigation(location, bearing, angle, duration) {\n        console.warn('animateToNavigation() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToNavigation', [location, bearing, angle, duration || 500]);\n      }\n    }, {\n      key: \"animateToRegion\",\n      value: function animateToRegion(region, duration) {\n        this._runCommand('animateToRegion', [region, duration || 500]);\n      }\n    }, {\n      key: \"animateToCoordinate\",\n      value: function animateToCoordinate(latLng, duration) {\n        console.warn('animateToCoordinate() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToCoordinate', [latLng, duration || 500]);\n      }\n    }, {\n      key: \"animateToBearing\",\n      value: function animateToBearing(bearing, duration) {\n        console.warn('animateToBearing() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToBearing', [bearing, duration || 500]);\n      }\n    }, {\n      key: \"animateToViewingAngle\",\n      value: function animateToViewingAngle(angle, duration) {\n        console.warn('animateToViewingAngle() is deprecated, use animateCamera() instead');\n\n        this._runCommand('animateToViewingAngle', [angle, duration || 500]);\n      }\n    }, {\n      key: \"fitToElements\",\n      value: function fitToElements(animated) {\n        this._runCommand('fitToElements', [animated]);\n      }\n    }, {\n      key: \"fitToSuppliedMarkers\",\n      value: function fitToSuppliedMarkers(markers) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _options$edgePadding = options.edgePadding,\n            edgePadding = _options$edgePadding === void 0 ? {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        } : _options$edgePadding,\n            _options$animated = options.animated,\n            animated = _options$animated === void 0 ? true : _options$animated;\n\n        this._runCommand('fitToSuppliedMarkers', [markers, edgePadding, animated]);\n      }\n    }, {\n      key: \"fitToCoordinates\",\n      value: function fitToCoordinates() {\n        var coordinates = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var _options$edgePadding2 = options.edgePadding,\n            edgePadding = _options$edgePadding2 === void 0 ? {\n          top: 0,\n          right: 0,\n          bottom: 0,\n          left: 0\n        } : _options$edgePadding2,\n            _options$animated2 = options.animated,\n            animated = _options$animated2 === void 0 ? true : _options$animated2;\n\n        this._runCommand('fitToCoordinates', [coordinates, edgePadding, animated]);\n      }\n    }, {\n      key: \"getMapBoundaries\",\n      value: function getMapBoundaries() {\n        return _regenerator.default.async(function getMapBoundaries$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(_reactNative.Platform.OS === 'android')) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 3;\n                return _regenerator.default.awrap(_reactNative.NativeModules.AirMapModule.getMapBoundaries(this._getHandle()));\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                if (!(_reactNative.Platform.OS === 'ios')) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 9;\n                return _regenerator.default.awrap(this._runCommand('getMapBoundaries', []));\n\n              case 9:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 10:\n                return _context.abrupt(\"return\", Promise.reject('getMapBoundaries not supported on this platform'));\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setMapBoundaries\",\n      value: function setMapBoundaries(northEast, southWest) {\n        this._runCommand('setMapBoundaries', [northEast, southWest]);\n      }\n    }, {\n      key: \"setIndoorActiveLevelIndex\",\n      value: function setIndoorActiveLevelIndex(activeLevelIndex) {\n        this._runCommand('setIndoorActiveLevelIndex', [activeLevelIndex]);\n      }\n    }, {\n      key: \"takeSnapshot\",\n      value: function takeSnapshot(args) {\n        var _this2 = this;\n\n        if (_reactNative.Platform.OS === 'ios' && arguments.length === 4) {\n          console.warn('Old takeSnapshot API has been deprecated; will be removed in the near future');\n          var width = arguments[0];\n          var height = arguments[1];\n          var region = arguments[2];\n          var callback = arguments[3];\n\n          this._runCommand('takeSnapshot', [width || 0, height || 0, region || {}, 'png', 1, 'legacy', callback]);\n\n          return undefined;\n        }\n\n        var config = {\n          width: args.width || 0,\n          height: args.height || 0,\n          region: args.region || {},\n          format: args.format || 'png',\n          quality: args.quality || 1.0,\n          result: args.result || 'file'\n        };\n        if (config.format !== 'png' && config.format !== 'jpg') throw new Error('Invalid format specified');\n        if (config.result !== 'file' && config.result !== 'base64') throw new Error('Invalid result specified');\n\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.takeSnapshot(this._getHandle(), config);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return new Promise(function (resolve, reject) {\n            _this2._runCommand('takeSnapshot', [config.width, config.height, config.region, config.format, config.quality, config.result, function (err, snapshot) {\n              if (err) {\n                reject(err);\n              } else {\n                resolve(snapshot);\n              }\n            }]);\n          });\n        }\n\n        return Promise.reject('takeSnapshot not supported on this platform');\n      }\n    }, {\n      key: \"pointForCoordinate\",\n      value: function pointForCoordinate(coordinate) {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.pointForCoordinate(this._getHandle(), coordinate);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('pointForCoordinate', [coordinate]);\n        }\n\n        return Promise.reject('pointForCoordinate not supported on this platform');\n      }\n    }, {\n      key: \"coordinateForPoint\",\n      value: function coordinateForPoint(point) {\n        if (_reactNative.Platform.OS === 'android') {\n          return _reactNative.NativeModules.AirMapModule.coordinateForPoint(this._getHandle(), point);\n        } else if (_reactNative.Platform.OS === 'ios') {\n          return this._runCommand('coordinateForPoint', [point]);\n        }\n\n        return Promise.reject('coordinateForPoint not supported on this platform');\n      }\n    }, {\n      key: \"boundingBoxForRegion\",\n      value: function boundingBoxForRegion(region) {\n        return {\n          northEast: {\n            latitude: region.latitude + region.latitudeDelta / 2,\n            longitude: region.longitude + region.longitudeDelta / 2\n          },\n          southWest: {\n            latitude: region.latitude - region.latitudeDelta / 2,\n            longitude: region.longitude - region.longitudeDelta / 2\n          }\n        };\n      }\n    }, {\n      key: \"_uiManagerCommand\",\n      value: function _uiManagerCommand(name) {\n        return _reactNative.NativeModules.UIManager[(0, _decorateMapComponent.getAirMapName)(this.props.provider)].Commands[name];\n      }\n    }, {\n      key: \"_mapManagerCommand\",\n      value: function _mapManagerCommand(name) {\n        return _reactNative.NativeModules[(0, _decorateMapComponent.getAirMapName)(this.props.provider) + \"Manager\"][name];\n      }\n    }, {\n      key: \"_getHandle\",\n      value: function _getHandle() {\n        return (0, _reactNative.findNodeHandle)(this.map);\n      }\n    }, {\n      key: \"_runCommand\",\n      value: function _runCommand(name, args) {\n        switch (_reactNative.Platform.OS) {\n          case 'android':\n            return _reactNative.NativeModules.UIManager.dispatchViewManagerCommand(this._getHandle(), this._uiManagerCommand(name), args);\n\n          case 'ios':\n            return this._mapManagerCommand(name).apply(void 0, [this._getHandle()].concat((0, _toConsumableArray2.default)(args)));\n\n          default:\n            return Promise.reject(\"Invalid platform was passed: \" + _reactNative.Platform.OS);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this3 = this;\n\n        var props;\n\n        if (this.state.isReady) {\n          props = _objectSpread({\n            region: null,\n            initialRegion: null,\n            onMarkerPress: this._onMarkerPress,\n            onChange: this._onChange,\n            onMapReady: this._onMapReady,\n            onLayout: this._onLayout\n          }, this.props);\n\n          if (_reactNative.Platform.OS === 'ios' && props.provider === ProviderConstants.PROVIDER_DEFAULT && GOOGLE_MAPS_ONLY_TYPES.includes(props.mapType)) {\n            props.mapType = MAP_TYPES.standard;\n          }\n\n          props.handlePanDrag = !!props.onPanDrag;\n        } else {\n          props = {\n            style: this.props.style,\n            region: null,\n            initialRegion: null,\n            onMarkerPress: this._onMarkerPress,\n            onChange: this._onChange,\n            onMapReady: this._onMapReady,\n            onLayout: this._onLayout\n          };\n        }\n\n        if (_reactNative.Platform.OS === 'android' && this.props.liteMode) {\n          return _react.default.createElement(AIRMapLite, (0, _extends2.default)({\n            ref: function ref(_ref) {\n              _this3.map = _ref;\n            }\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 875\n            }\n          }));\n        }\n\n        var AIRMap = getAirMapComponent(this.props.provider);\n        return _react.default.createElement(AIRMap, (0, _extends2.default)({\n          ref: function ref(_ref2) {\n            _this3.map = _ref2;\n          }\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 885\n          }\n        }));\n      }\n    }]);\n    return MapView;\n  }(_react.default.Component);\n\n  MapView = _wrapComponent(\"MapView\")(MapView);\n  MapView.propTypes = propTypes;\n  MapView.viewConfig = viewConfig;\n  MapView.childContextTypes = _decorateMapComponent.contextTypes;\n  MapView.MAP_TYPES = MAP_TYPES;\n\n  var nativeComponent = function nativeComponent(Component) {\n    return (0, _reactNative.requireNativeComponent)(Component, MapView, {\n      nativeOnly: {\n        onChange: true,\n        onMapReady: true,\n        onKmlReady: true,\n        handlePanDrag: true\n      }\n    });\n  };\n\n  var airMaps = {\n    default: nativeComponent('AIRMap')\n  };\n\n  if (_reactNative.Platform.OS === 'android') {\n    airMaps.google = airMaps.default;\n  } else {\n    airMaps.google = _decorateMapComponent.googleMapIsInstalled ? nativeComponent('AIRGoogleMap') : (0, _decorateMapComponent.createNotSupportedComponent)('react-native-maps: AirGoogleMaps dir must be added to your xCode project to support GoogleMaps on iOS.');\n  }\n\n  var getAirMapComponent = function getAirMapComponent(provider) {\n    return airMaps[provider || 'default'];\n  };\n\n  var AIRMapLite = _reactNative.NativeModules.UIManager.AIRMapLite && (0, _reactNative.requireNativeComponent)('AIRMapLite', MapView, {\n    nativeOnly: {\n      onChange: true,\n      onMapReady: true,\n      handlePanDrag: true\n    }\n  });\n\n  var Animated = _reactNative.Animated.createAnimatedComponent(MapView);\n\n  exports.Animated = Animated;\n\n  var ProviderPropType = _propTypes.default.oneOf(Object.values(ProviderConstants));\n\n  exports.ProviderPropType = ProviderPropType;\n  MapView.Marker = _MapMarker.default;\n  MapView.Polyline = _MapPolyline.default;\n  MapView.Polygon = _MapPolygon.default;\n  MapView.Circle = _MapCircle.default;\n  MapView.UrlTile = _MapUrlTile.default;\n  MapView.LocalTile = _MapLocalTile.default;\n  MapView.Overlay = _MapOverlay.default;\n  MapView.Callout = _MapCallout.default;\n  (0, _extends2.default)(MapView, ProviderConstants);\n  MapView.ProviderPropType = ProviderPropType;\n  MapView.Animated = Animated;\n  MapView.AnimatedRegion = _AnimatedRegion.default;\n  var _default2 = MapView;\n  exports.default = _default2;\n});","map":[[31,0,2,0],[35,0,1,0],[37,0,3,0],[39,0,14,0],[41,0,15,0],[43,0,16,0],[45,0,17,0],[47,0,18,0],[49,0,19,0],[51,0,20,0],[53,0,21,0],[55,0,22,0],[57,0,23,0],[59,0,29,0],[86,0,31,7],[86,6,31,13,"MAP_TYPES"],[86,15,31,22],[86,18,31,25],[87,0,32,2,"STANDARD"],[87,4,32,2,"STANDARD"],[87,12,32,10],[87,14,32,12],[87,24,31,25],[88,0,33,2,"SATELLITE"],[88,4,33,2,"SATELLITE"],[88,13,33,11],[88,15,33,13],[88,26,31,25],[89,0,34,2,"HYBRID"],[89,4,34,2,"HYBRID"],[89,10,34,8],[89,12,34,10],[89,20,31,25],[90,0,35,2,"TERRAIN"],[90,4,35,2,"TERRAIN"],[90,11,35,9],[90,13,35,11],[90,22,31,25],[91,0,36,2,"NONE"],[91,4,36,2,"NONE"],[91,8,36,6],[91,10,36,8],[91,16,31,25],[92,0,37,2,"MUTEDSTANDARD"],[92,4,37,2,"MUTEDSTANDARD"],[92,17,37,15],[92,19,37,17],[93,0,31,25],[93,3,31,7],[95,0,40,0],[95,6,40,6,"GOOGLE_MAPS_ONLY_TYPES"],[95,28,40,28],[95,31,40,31],[95,32,41,2,"MAP_TYPES"],[95,41,41,11],[95,42,41,12,"TERRAIN"],[95,49,40,31],[95,51,42,2,"MAP_TYPES"],[95,60,42,11],[95,61,42,12,"NONE"],[95,65,40,31],[95,66,40,0],[96,0,45,0],[96,6,45,6,"viewConfig"],[96,16,45,16],[96,19,45,19],[97,0,46,2,"uiViewClassName"],[97,4,46,2,"uiViewClassName"],[97,19,46,17],[97,21,46,19],[97,39,45,19],[98,0,47,2,"validAttributes"],[98,4,47,2,"validAttributes"],[98,19,47,17],[98,21,47,19],[99,0,48,4,"region"],[99,6,48,4,"region"],[99,12,48,10],[99,14,48,12],[100,0,47,19],[101,0,45,19],[101,3,45,0],[103,0,56,0],[103,6,56,6,"CameraShape"],[103,17,56,17],[103,20,56,20,"PropTypes"],[103,39,56,30,"shape"],[103,44,56,20],[103,45,56,36],[104,0,57,2,"center"],[104,4,57,2,"center"],[104,10,57,8],[104,12,57,10,"PropTypes"],[104,31,57,20,"shape"],[104,36,57,10],[104,37,57,26],[105,0,58,4,"latitude"],[105,6,58,4,"latitude"],[105,14,58,12],[105,16,58,14,"PropTypes"],[105,35,58,24,"number"],[105,41,58,14],[105,42,58,31,"isRequired"],[105,52,57,26],[106,0,59,4,"longitude"],[106,6,59,4,"longitude"],[106,15,59,13],[106,17,59,15,"PropTypes"],[106,36,59,25,"number"],[106,42,59,15],[106,43,59,32,"isRequired"],[107,0,57,26],[107,5,57,10],[107,6,56,36],[108,0,61,2,"pitch"],[108,4,61,2,"pitch"],[108,9,61,7],[108,11,61,9,"PropTypes"],[108,30,61,19,"number"],[108,36,61,9],[108,37,61,26,"isRequired"],[108,47,56,36],[109,0,62,2,"heading"],[109,4,62,2,"heading"],[109,11,62,9],[109,13,62,11,"PropTypes"],[109,32,62,21,"number"],[109,38,62,11],[109,39,62,28,"isRequired"],[109,49,56,36],[110,0,63,2,"altitude"],[110,4,63,2,"altitude"],[110,12,63,10],[110,14,63,12,"PropTypes"],[110,33,63,22,"number"],[110,39,63,12],[110,40,63,29,"isRequired"],[110,50,56,36],[111,0,64,2,"zoom"],[111,4,64,2,"zoom"],[111,8,64,6],[111,10,64,8,"PropTypes"],[111,29,64,18,"number"],[111,35,64,8],[111,36,64,25,"isRequired"],[112,0,56,36],[112,3,56,20],[112,4,56,0],[114,0,69,0],[114,6,69,6,"viewPropTypes"],[114,19,69,19],[114,22,69,22,"ViewPropTypes"],[114,52,69,39,"View"],[114,70,69,44,"propTypes"],[114,79,69,0],[116,0,71,0],[116,6,71,6,"propTypes"],[116,15,71,15],[116,36,72,5,"viewPropTypes"],[116,49,71,15],[117,0,78,2,"provider"],[117,4,78,2,"provider"],[117,12,78,10],[117,14,78,12,"PropTypes"],[117,33,78,22,"oneOf"],[117,38,78,12],[117,39,78,28],[117,40,79,4],[117,48,78,28],[117,49,78,12],[117,50,71,15],[118,0,86,2,"style"],[118,4,86,2,"style"],[118,9,86,7],[118,11,86,9,"viewPropTypes"],[118,24,86,22],[118,25,86,23,"style"],[118,30,71,15],[119,0,94,2,"customMapStyle"],[119,4,94,2,"customMapStyle"],[119,18,94,16],[119,20,94,18,"PropTypes"],[119,39,94,28,"array"],[119,44,71,15],[120,0,101,2,"customMapStyleString"],[120,4,101,2,"customMapStyleString"],[120,24,101,22],[120,26,101,24,"PropTypes"],[120,45,101,34,"string"],[120,51,71,15],[121,0,113,2,"showsUserLocation"],[121,4,113,2,"showsUserLocation"],[121,21,113,19],[121,23,113,21,"PropTypes"],[121,42,113,31,"bool"],[121,46,71,15],[122,0,122,2,"userLocationAnnotationTitle"],[122,4,122,2,"userLocationAnnotationTitle"],[122,31,122,29],[122,33,122,31,"PropTypes"],[122,52,122,41,"string"],[122,58,71,15],[123,0,130,2,"showsMyLocationButton"],[123,4,130,2,"showsMyLocationButton"],[123,25,130,23],[123,27,130,25,"PropTypes"],[123,46,130,35,"bool"],[123,50,71,15],[124,0,139,2,"followsUserLocation"],[124,4,139,2,"followsUserLocation"],[124,23,139,21],[124,25,139,23,"PropTypes"],[124,44,139,33,"bool"],[124,48,71,15],[125,0,146,2,"showsPointsOfInterest"],[125,4,146,2,"showsPointsOfInterest"],[125,25,146,23],[125,27,146,25,"PropTypes"],[125,46,146,35,"bool"],[125,50,71,15],[126,0,154,2,"showsCompass"],[126,4,154,2,"showsCompass"],[126,16,154,14],[126,18,154,16,"PropTypes"],[126,37,154,26,"bool"],[126,41,71,15],[127,0,161,2,"zoomEnabled"],[127,4,161,2,"zoomEnabled"],[127,15,161,13],[127,17,161,15,"PropTypes"],[127,36,161,25,"bool"],[127,40,71,15],[128,0,169,2,"zoomControlEnabled"],[128,4,169,2,"zoomControlEnabled"],[128,22,169,20],[128,24,169,22,"PropTypes"],[128,43,169,32,"bool"],[128,47,71,15],[129,0,176,2,"rotateEnabled"],[129,4,176,2,"rotateEnabled"],[129,17,176,15],[129,19,176,17,"PropTypes"],[129,38,176,27,"bool"],[129,42,71,15],[130,0,183,2,"cacheEnabled"],[130,4,183,2,"cacheEnabled"],[130,16,183,14],[130,18,183,16,"PropTypes"],[130,37,183,26,"bool"],[130,41,71,15],[131,0,190,2,"loadingEnabled"],[131,4,190,2,"loadingEnabled"],[131,18,190,16],[131,20,190,18,"PropTypes"],[131,39,190,28,"bool"],[131,43,71,15],[132,0,197,2,"loadingBackgroundColor"],[132,4,197,2,"loadingBackgroundColor"],[132,26,197,24],[132,28,197,26,"ColorPropType"],[132,54,71,15],[133,0,204,2,"loadingIndicatorColor"],[133,4,204,2,"loadingIndicatorColor"],[133,25,204,23],[133,27,204,25,"ColorPropType"],[133,53,71,15],[134,0,211,2,"scrollEnabled"],[134,4,211,2,"scrollEnabled"],[134,17,211,15],[134,19,211,17,"PropTypes"],[134,38,211,27,"bool"],[134,42,71,15],[135,0,218,2,"pitchEnabled"],[135,4,218,2,"pitchEnabled"],[135,16,218,14],[135,18,218,16,"PropTypes"],[135,37,218,26,"bool"],[135,41,71,15],[136,0,226,2,"toolbarEnabled"],[136,4,226,2,"toolbarEnabled"],[136,18,226,16],[136,20,226,18,"PropTypes"],[136,39,226,28,"bool"],[136,43,71,15],[137,0,234,2,"moveOnMarkerPress"],[137,4,234,2,"moveOnMarkerPress"],[137,21,234,19],[137,23,234,21,"PropTypes"],[137,42,234,31,"bool"],[137,46,71,15],[138,0,241,2,"showsScale"],[138,4,241,2,"showsScale"],[138,14,241,12],[138,16,241,14,"PropTypes"],[138,35,241,24,"bool"],[138,39,71,15],[139,0,247,2,"showsBuildings"],[139,4,247,2,"showsBuildings"],[139,18,247,16],[139,20,247,18,"PropTypes"],[139,39,247,28,"bool"],[139,43,71,15],[140,0,253,2,"showsTraffic"],[140,4,253,2,"showsTraffic"],[140,16,253,14],[140,18,253,16,"PropTypes"],[140,37,253,26,"bool"],[140,41,71,15],[141,0,261,2,"showsIndoors"],[141,4,261,2,"showsIndoors"],[141,16,261,14],[141,18,261,16,"PropTypes"],[141,37,261,26,"bool"],[141,41,71,15],[142,0,269,2,"showsIndoorLevelPicker"],[142,4,269,2,"showsIndoorLevelPicker"],[142,26,269,24],[142,28,269,26,"PropTypes"],[142,47,269,36,"bool"],[142,51,71,15],[143,0,280,2,"mapType"],[143,4,280,2,"mapType"],[143,11,280,9],[143,13,280,11,"PropTypes"],[143,32,280,21,"oneOf"],[143,37,280,11],[143,38,280,27,"Object"],[143,44,280,33],[143,45,280,34,"values"],[143,51,280,27],[143,52,280,41,"MAP_TYPES"],[143,61,280,27],[143,62,280,11],[143,63,71,15],[144,0,288,2,"region"],[144,4,288,2,"region"],[144,10,288,8],[144,12,288,10,"PropTypes"],[144,31,288,20,"shape"],[144,36,288,10],[144,37,288,26],[145,0,292,4,"latitude"],[145,6,292,4,"latitude"],[145,14,292,12],[145,16,292,14,"PropTypes"],[145,35,292,24,"number"],[145,41,292,14],[145,42,292,31,"isRequired"],[145,52,288,26],[146,0,293,4,"longitude"],[146,6,293,4,"longitude"],[146,15,293,13],[146,17,293,15,"PropTypes"],[146,36,293,25,"number"],[146,42,293,15],[146,43,293,32,"isRequired"],[146,53,288,26],[147,0,299,4,"latitudeDelta"],[147,6,299,4,"latitudeDelta"],[147,19,299,17],[147,21,299,19,"PropTypes"],[147,40,299,29,"number"],[147,46,299,19],[147,47,299,36,"isRequired"],[147,57,288,26],[148,0,300,4,"longitudeDelta"],[148,6,300,4,"longitudeDelta"],[148,20,300,18],[148,22,300,20,"PropTypes"],[148,41,300,30,"number"],[148,47,300,20],[148,48,300,37,"isRequired"],[149,0,288,26],[149,5,288,10],[149,6,71,15],[150,0,311,2,"initialRegion"],[150,4,311,2,"initialRegion"],[150,17,311,15],[150,19,311,17,"PropTypes"],[150,38,311,27,"shape"],[150,43,311,17],[150,44,311,33],[151,0,315,4,"latitude"],[151,6,315,4,"latitude"],[151,14,315,12],[151,16,315,14,"PropTypes"],[151,35,315,24,"number"],[151,41,315,14],[151,42,315,31,"isRequired"],[151,52,311,33],[152,0,316,4,"longitude"],[152,6,316,4,"longitude"],[152,15,316,13],[152,17,316,15,"PropTypes"],[152,36,316,25,"number"],[152,42,316,15],[152,43,316,32,"isRequired"],[152,53,311,33],[153,0,322,4,"latitudeDelta"],[153,6,322,4,"latitudeDelta"],[153,19,322,17],[153,21,322,19,"PropTypes"],[153,40,322,29,"number"],[153,46,322,19],[153,47,322,36,"isRequired"],[153,57,311,33],[154,0,323,4,"longitudeDelta"],[154,6,323,4,"longitudeDelta"],[154,20,323,18],[154,22,323,20,"PropTypes"],[154,41,323,30,"number"],[154,47,323,20],[154,48,323,37,"isRequired"],[155,0,311,33],[155,5,311,17],[155,6,71,15],[156,0,332,2,"camera"],[156,4,332,2,"camera"],[156,10,332,8],[156,12,332,10,"CameraShape"],[156,23,71,15],[157,0,345,2,"initialCamera"],[157,4,345,2,"initialCamera"],[157,17,345,15],[157,19,345,17,"CameraShape"],[157,30,71,15],[158,0,353,2,"liteMode"],[158,4,353,2,"liteMode"],[158,12,353,10],[158,14,353,12,"PropTypes"],[158,33,353,22,"bool"],[158,37,71,15],[159,0,362,2,"mapPadding"],[159,4,362,2,"mapPadding"],[159,14,362,12],[159,16,362,14,"EdgeInsetsPropType"],[159,47,71,15],[160,0,371,2,"paddingAdjustmentBehavior"],[160,4,371,2,"paddingAdjustmentBehavior"],[160,29,371,27],[160,31,371,29,"PropTypes"],[160,50,371,39,"oneOf"],[160,55,371,29],[160,56,371,45],[160,57,371,46],[160,65,371,45],[160,67,371,56],[160,78,371,45],[160,80,371,69],[160,87,371,45],[160,88,371,29],[160,89,71,15],[161,0,378,2,"maxDelta"],[161,4,378,2,"maxDelta"],[161,12,378,10],[161,14,378,12,"PropTypes"],[161,33,378,22,"number"],[161,39,71,15],[162,0,385,2,"minDelta"],[162,4,385,2,"minDelta"],[162,12,385,10],[162,14,385,12,"PropTypes"],[162,33,385,22,"number"],[162,39,71,15],[163,0,391,2,"legalLabelInsets"],[163,4,391,2,"legalLabelInsets"],[163,20,391,18],[163,22,391,20,"EdgeInsetsPropType"],[163,53,71,15],[164,0,396,2,"onMapReady"],[164,4,396,2,"onMapReady"],[164,14,396,12],[164,16,396,14,"PropTypes"],[164,35,396,24,"func"],[164,39,71,15],[165,0,401,2,"onKmlReady"],[165,4,401,2,"onKmlReady"],[165,14,401,12],[165,16,401,14,"PropTypes"],[165,35,401,24,"func"],[165,39,71,15],[166,0,406,2,"onRegionChange"],[166,4,406,2,"onRegionChange"],[166,18,406,16],[166,20,406,18,"PropTypes"],[166,39,406,28,"func"],[166,43,71,15],[167,0,411,2,"onRegionChangeComplete"],[167,4,411,2,"onRegionChangeComplete"],[167,26,411,24],[167,28,411,26,"PropTypes"],[167,47,411,36,"func"],[167,51,71,15],[168,0,416,2,"onPress"],[168,4,416,2,"onPress"],[168,11,416,9],[168,13,416,11,"PropTypes"],[168,32,416,21,"func"],[168,36,71,15],[169,0,421,2,"onLongPress"],[169,4,421,2,"onLongPress"],[169,15,421,13],[169,17,421,15,"PropTypes"],[169,36,421,25,"func"],[169,40,71,15],[170,0,426,2,"onUserLocationChange"],[170,4,426,2,"onUserLocationChange"],[170,24,426,22],[170,26,426,24,"PropTypes"],[170,45,426,34,"func"],[170,49,71,15],[171,0,431,2,"onPanDrag"],[171,4,431,2,"onPanDrag"],[171,13,431,11],[171,15,431,13,"PropTypes"],[171,34,431,23,"func"],[171,38,71,15],[172,0,436,2,"onPoiClick"],[172,4,436,2,"onPoiClick"],[172,14,436,12],[172,16,436,14,"PropTypes"],[172,35,436,24,"func"],[172,39,71,15],[173,0,441,2,"onMarkerPress"],[173,4,441,2,"onMarkerPress"],[173,17,441,15],[173,19,441,17,"PropTypes"],[173,38,441,27,"func"],[173,42,71,15],[174,0,449,2,"onMarkerSelect"],[174,4,449,2,"onMarkerSelect"],[174,18,449,16],[174,20,449,18,"PropTypes"],[174,39,449,28,"func"],[174,43,71,15],[175,0,457,2,"onMarkerDeselect"],[175,4,457,2,"onMarkerDeselect"],[175,20,457,18],[175,22,457,20,"PropTypes"],[175,41,457,30,"func"],[175,45,71,15],[176,0,462,2,"onCalloutPress"],[176,4,462,2,"onCalloutPress"],[176,18,462,16],[176,20,462,18,"PropTypes"],[176,39,462,28,"func"],[176,43,71,15],[177,0,467,2,"onMarkerDragStart"],[177,4,467,2,"onMarkerDragStart"],[177,21,467,19],[177,23,467,21,"PropTypes"],[177,42,467,31,"func"],[177,46,71,15],[178,0,472,2,"onMarkerDrag"],[178,4,472,2,"onMarkerDrag"],[178,16,472,14],[178,18,472,16,"PropTypes"],[178,37,472,26,"func"],[178,41,71,15],[179,0,478,2,"onMarkerDragEnd"],[179,4,478,2,"onMarkerDragEnd"],[179,19,478,17],[179,21,478,19,"PropTypes"],[179,40,478,29,"func"],[179,44,71,15],[180,0,483,2,"minZoomLevel"],[180,4,483,2,"minZoomLevel"],[180,16,483,14],[180,18,483,16,"PropTypes"],[180,37,483,26,"number"],[180,43,71,15],[181,0,488,2,"maxZoomLevel"],[181,4,488,2,"maxZoomLevel"],[181,16,488,14],[181,18,488,16,"PropTypes"],[181,37,488,26,"number"],[181,43,71,15],[182,0,493,2,"kmlSrc"],[182,4,493,2,"kmlSrc"],[182,10,493,8],[182,12,493,10,"PropTypes"],[182,31,493,20,"string"],[182,37,71,15],[183,0,498,2,"onIndoorLevelActivated"],[183,4,498,2,"onIndoorLevelActivated"],[183,26,498,24],[183,28,498,26,"PropTypes"],[183,47,498,36,"func"],[183,51,71,15],[184,0,503,2,"onIndoorBuildingFocused"],[184,4,503,2,"onIndoorBuildingFocused"],[184,27,503,25],[184,29,503,27,"PropTypes"],[184,48,503,37,"func"],[185,0,71,15],[185,4,71,0],[187,6,506,6,"MapView"],[187,13],[190,0,507,2],[190,21,507,14,"props"],[190,26,507,2],[190,28,507,21],[191,0,507,21],[193,0,507,21],[194,0,508,4],[194,111,508,10,"props"],[194,116,508,4],[195,0,510,4],[195,12,510,9,"state"],[195,17,510,4],[195,20,510,17],[196,0,511,6,"isReady"],[196,8,511,6,"isReady"],[196,15,511,13],[196,17,511,15,"Platform"],[196,39,511,24,"OS"],[196,41,511,15],[196,46,511,31],[197,0,510,17],[197,7,510,4],[198,0,514,4],[198,12,514,9,"_onMapReady"],[198,23,514,4],[198,26,514,23],[198,32,514,28,"_onMapReady"],[198,43,514,23],[198,44,514,40,"bind"],[198,48,514,23],[198,93,514,4],[199,0,515,4],[199,12,515,9,"_onMarkerPress"],[199,26,515,4],[199,29,515,26],[199,35,515,31,"_onMarkerPress"],[199,49,515,26],[199,50,515,46,"bind"],[199,54,515,26],[199,99,515,4],[200,0,516,4],[200,12,516,9,"_onChange"],[200,21,516,4],[200,24,516,21],[200,30,516,26,"_onChange"],[200,39,516,21],[200,40,516,36,"bind"],[200,44,516,21],[200,89,516,4],[201,0,517,4],[201,12,517,9,"_onLayout"],[201,21,517,4],[201,24,517,21],[201,30,517,26,"_onLayout"],[201,39,517,21],[201,40,517,36,"bind"],[201,44,517,21],[201,89,517,4],[202,0,507,21],[203,0,518,3],[207,40,520,20],[208,0,521,4],[208,15,521,11],[209,0,521,13,"provider"],[209,10,521,13,"provider"],[209,18,521,21],[209,20,521,23],[209,25,521,28,"props"],[209,30,521,23],[209,31,521,34,"provider"],[210,0,521,11],[210,9,521,4],[211,0,522,3],[214,42,524,22,"nextProps"],[214,51],[214,53,524,33],[215,0,525,4],[215,12,525,10,"a"],[215,13,525,11],[215,16,525,14],[215,21,525,19,"__lastRegion"],[215,33,525,4],[216,0,526,4],[216,12,526,10,"b"],[216,13,526,11],[216,16,526,14,"nextProps"],[216,25,526,23],[216,26,526,24,"region"],[216,32,526,4],[217,0,527,4],[217,12,527,8],[217,13,527,9,"a"],[217,14,527,8],[217,18,527,14],[217,19,527,15,"b"],[217,20,527,4],[217,22,527,18],[219,0,528,4],[219,12,529,6,"a"],[219,13,529,7],[219,14,529,8,"latitude"],[219,22,529,6],[219,27,529,21,"b"],[219,28,529,22],[219,29,529,23,"latitude"],[219,37,529,6],[219,41,530,6,"a"],[219,42,530,7],[219,43,530,8,"longitude"],[219,52,530,6],[219,57,530,22,"b"],[219,58,530,23],[219,59,530,24,"longitude"],[219,68,529,6],[219,72,531,6,"a"],[219,73,531,7],[219,74,531,8,"latitudeDelta"],[219,87,531,6],[219,92,531,26,"b"],[219,93,531,27],[219,94,531,28,"latitudeDelta"],[219,107,529,6],[219,111,532,6,"a"],[219,112,532,7],[219,113,532,8,"longitudeDelta"],[219,127,532,6],[219,132,532,27,"b"],[219,133,532,28],[219,134,532,29,"longitudeDelta"],[219,148,528,4],[219,150,533,6],[220,0,534,6],[220,15,534,11,"map"],[220,18,534,6],[220,19,534,15,"setNativeProps"],[220,33,534,6],[220,34,534,30],[221,0,534,32,"region"],[221,12,534,32,"region"],[221,18,534,38],[221,20,534,40,"b"],[222,0,534,30],[222,11,534,6],[223,0,535,5],[224,0,536,3],[227,42,538,22],[228,0,538,22],[228,12,539,12,"isReady"],[228,19,538,22],[228,22,539,24],[228,27,539,29,"state"],[228,32,538,22],[228,33,539,12,"isReady"],[228,40,538,22],[230,0,540,4],[230,12,540,8,"isReady"],[230,19,540,4],[230,21,540,17],[231,0,541,6],[231,15,541,11,"_updateStyle"],[231,27,541,6],[232,0,542,5],[233,0,543,3],[236,37,545,17],[237,0,545,17],[237,12,546,12,"customMapStyle"],[237,26,545,17],[237,29,546,31],[237,34,546,36,"props"],[237,39,545,17],[237,40,546,12,"customMapStyle"],[237,54,545,17],[238,0,547,4],[238,13,547,9,"map"],[238,16,547,4],[238,17,547,13,"setNativeProps"],[238,31,547,4],[238,32,547,28],[239,0,547,30,"customMapStyleString"],[239,10,547,30,"customMapStyleString"],[239,30,547,50],[239,32,547,52,"JSON"],[239,36,547,56],[239,37,547,57,"stringify"],[239,46,547,52],[239,47,547,67,"customMapStyle"],[239,61,547,52],[240,0,547,28],[240,9,547,4],[241,0,548,3],[244,36,550,16],[245,0,550,16],[245,26,551,50],[245,31,551,55,"props"],[245,36,550,16],[246,0,550,16],[246,12,551,12,"region"],[246,18,550,16],[246,33,551,12,"region"],[246,39,550,16],[247,0,550,16],[247,12,551,20,"initialRegion"],[247,25,550,16],[247,40,551,20,"initialRegion"],[247,53,550,16],[248,0,550,16],[248,12,551,35,"onMapReady"],[248,22,550,16],[248,37,551,35,"onMapReady"],[248,47,550,16],[250,0,552,4],[250,12,552,8,"region"],[250,18,552,4],[250,20,552,16],[251,0,553,6],[251,15,553,11,"map"],[251,18,553,6],[251,19,553,15,"setNativeProps"],[251,33,553,6],[251,34,553,30],[252,0,553,32,"region"],[252,12,553,32,"region"],[252,18,553,38],[252,20,553,32,"region"],[253,0,553,30],[253,11,553,6],[254,0,554,5],[254,9,552,4],[254,15,554,11],[254,19,554,15,"initialRegion"],[254,32,554,11],[254,34,554,30],[255,0,555,6],[255,15,555,11,"map"],[255,18,555,6],[255,19,555,15,"setNativeProps"],[255,33,555,6],[255,34,555,30],[256,0,555,32,"initialRegion"],[256,12,555,32,"initialRegion"],[256,25,555,45],[256,27,555,32,"initialRegion"],[257,0,555,30],[257,11,555,6],[258,0,556,5],[260,0,557,4],[260,13,557,9,"_updateStyle"],[260,25,557,4],[262,0,558,4],[262,13,558,9,"setState"],[262,21,558,4],[262,22,558,18],[263,0,558,20,"isReady"],[263,10,558,20,"isReady"],[263,17,558,27],[263,19,558,29],[264,0,558,18],[264,9,558,4],[264,11,558,37],[264,23,558,43],[265,0,559,6],[265,14,559,10,"onMapReady"],[265,24,559,6],[265,26,559,22,"onMapReady"],[265,36,559,32],[266,0,560,5],[266,9,558,4],[267,0,561,3],[270,32,563,12,"e"],[270,33],[270,35,563,15],[271,0,563,15],[271,12,564,12,"layout"],[271,18,563,15],[271,21,564,23,"e"],[271,22,564,24],[271,23,564,25,"nativeEvent"],[271,34,563,15],[271,35,564,12,"layout"],[271,41,563,15],[272,0,565,4],[272,12,565,8],[272,13,565,9,"layout"],[272,19,565,15],[272,20,565,16,"width"],[272,25,565,8],[272,29,565,25],[272,30,565,26,"layout"],[272,36,565,32],[272,37,565,33,"height"],[272,43,565,4],[272,45,565,41],[274,0,566,4],[274,12,566,8],[274,17,566,13,"state"],[274,22,566,8],[274,23,566,19,"isReady"],[274,30,566,8],[274,34,566,30],[274,35,566,31],[274,40,566,36,"__layoutCalled"],[274,54,566,4],[274,56,566,52],[275,0,566,52],[275,29,567,40],[275,34,567,45,"props"],[275,39,566,52],[276,0,566,52],[276,14,567,14,"region"],[276,20,566,52],[276,36,567,14,"region"],[276,42,566,52],[277,0,566,52],[277,14,567,22,"initialRegion"],[277,27,566,52],[277,43,567,22,"initialRegion"],[277,56,566,52],[279,0,568,6],[279,14,568,10,"region"],[279,20,568,6],[279,22,568,18],[280,0,569,8],[280,17,569,13,"__layoutCalled"],[280,31,569,8],[280,34,569,30],[280,38,569,8],[281,0,570,8],[281,17,570,13,"map"],[281,20,570,8],[281,21,570,17,"setNativeProps"],[281,35,570,8],[281,36,570,32],[282,0,570,34,"region"],[282,14,570,34,"region"],[282,20,570,40],[282,22,570,34,"region"],[283,0,570,32],[283,13,570,8],[284,0,571,7],[284,11,568,6],[284,17,571,13],[284,21,571,17,"initialRegion"],[284,34,571,13],[284,36,571,32],[285,0,572,8],[285,17,572,13,"__layoutCalled"],[285,31,572,8],[285,34,572,30],[285,38,572,8],[286,0,573,8],[286,17,573,13,"map"],[286,20,573,8],[286,21,573,17,"setNativeProps"],[286,35,573,8],[286,36,573,32],[287,0,573,34,"initialRegion"],[287,14,573,34,"initialRegion"],[287,27,573,47],[287,29,573,34,"initialRegion"],[288,0,573,32],[288,13,573,8],[289,0,574,7],[290,0,575,5],[292,0,576,4],[292,12,576,8],[292,17,576,13,"props"],[292,22,576,8],[292,23,576,19,"onLayout"],[292,31,576,4],[292,33,576,29],[293,0,577,6],[293,15,577,11,"props"],[293,20,577,6],[293,21,577,17,"onLayout"],[293,29,577,6],[293,30,577,26,"e"],[293,31,577,6],[294,0,578,5],[295,0,579,3],[298,37,581,17,"event"],[298,42],[298,44,581,24],[299,0,582,4],[299,12,582,8],[299,17,582,13,"props"],[299,22,582,8],[299,23,582,19,"onMarkerPress"],[299,36,582,4],[299,38,582,34],[300,0,583,6],[300,15,583,11,"props"],[300,20,583,6],[300,21,583,17,"onMarkerPress"],[300,34,583,6],[300,35,583,31,"event"],[300,40,583,36],[300,41,583,37,"nativeEvent"],[300,52,583,6],[301,0,584,5],[302,0,585,3],[305,32,587,12,"event"],[305,37],[305,39,587,19],[306,0,588,4],[306,13,588,9,"__lastRegion"],[306,25,588,4],[306,28,588,24,"event"],[306,33,588,29],[306,34,588,30,"nativeEvent"],[306,45,588,24],[306,46,588,42,"region"],[306,52,588,4],[308,0,589,4],[308,12,589,8,"event"],[308,17,589,13],[308,18,589,14,"nativeEvent"],[308,29,589,8],[308,30,589,26,"continuous"],[308,40,589,4],[308,42,589,38],[309,0,590,6],[309,14,590,10],[309,19,590,15,"props"],[309,24,590,10],[309,25,590,21,"onRegionChange"],[309,39,590,6],[309,41,590,37],[310,0,591,8],[310,17,591,13,"props"],[310,22,591,8],[310,23,591,19,"onRegionChange"],[310,37,591,8],[310,38,591,34,"event"],[310,43,591,39],[310,44,591,40,"nativeEvent"],[310,55,591,34],[310,56,591,52,"region"],[310,62,591,8],[311,0,592,7],[312,0,593,5],[312,9,589,4],[312,15,593,11],[312,19,593,15],[312,24,593,20,"props"],[312,29,593,15],[312,30,593,26,"onRegionChangeComplete"],[312,52,593,11],[312,54,593,50],[313,0,594,6],[313,15,594,11,"props"],[313,20,594,6],[313,21,594,17,"onRegionChangeComplete"],[313,43,594,6],[313,44,594,40,"event"],[313,49,594,45],[313,50,594,46,"nativeEvent"],[313,61,594,40],[313,62,594,58,"region"],[313,68,594,6],[314,0,595,5],[315,0,596,3],[318,34,598,14],[319,0,599,4],[319,12,599,8,"Platform"],[319,34,599,17,"OS"],[319,36,599,8],[319,41,599,24],[319,50,599,4],[319,52,599,35],[320,0,600,6],[320,17,600,13,"NativeModules"],[320,44,600,27,"AirMapModule"],[320,56,600,13],[320,57,600,40,"getCamera"],[320,66,600,13],[320,67,600,50],[320,72,600,55,"_getHandle"],[320,82,600,50],[320,84,600,13],[320,85,600,6],[321,0,601,5],[321,9,599,4],[321,15,601,11],[321,19,601,15,"Platform"],[321,41,601,24,"OS"],[321,43,601,15],[321,48,601,31],[321,53,601,11],[321,55,601,38],[322,0,602,6],[322,17,602,13],[322,22,602,18,"_runCommand"],[322,33,602,13],[322,34,602,30],[322,45,602,13],[322,47,602,43],[322,49,602,13],[322,50,602,6],[323,0,603,5],[325,0,604,4],[325,15,604,11,"Promise"],[325,22,604,18],[325,23,604,19,"reject"],[325,29,604,11],[325,30,604,26],[325,72,604,11],[325,73,604,4],[326,0,605,3],[329,32,607,12,"camera"],[329,38],[329,40,607,20],[330,0,608,4],[330,13,608,9,"_runCommand"],[330,24,608,4],[330,25,608,21],[330,36,608,4],[330,38,608,34],[330,39,608,35,"camera"],[330,45,608,34],[330,46,608,4],[331,0,609,3],[334,36,611,16,"camera"],[334,42],[334,44,611,24,"opts"],[334,48],[334,50,611,30],[335,0,612,4],[335,13,612,9,"_runCommand"],[335,24,612,4],[335,25,612,21],[335,40,612,4],[335,42,612,38],[335,43,612,39,"camera"],[335,49,612,38],[335,51,612,48,"opts"],[335,55,612,52],[335,59,612,56,"opts"],[335,63,612,60],[335,64,612,61,"duration"],[335,72,612,47],[335,76,612,74],[335,79,612,38],[335,80,612,4],[336,0,613,3],[339,42,615,22,"location"],[339,50],[339,52,615,32,"bearing"],[339,59],[339,61,615,41,"angle"],[339,66],[339,68,615,48,"duration"],[339,76],[339,78,615,58],[340,0,616,4,"console"],[340,8,616,4,"console"],[340,15,616,11],[340,16,616,12,"warn"],[340,20,616,4],[340,21,616,17],[340,87,616,4],[342,0,617,4],[342,13,617,9,"_runCommand"],[342,24,617,4],[342,25,617,21],[342,46,617,4],[342,48,617,44],[342,49,617,45,"location"],[342,57,617,44],[342,59,617,55,"bearing"],[342,66,617,44],[342,68,617,64,"angle"],[342,73,617,44],[342,75,617,71,"duration"],[342,83,617,79],[342,87,617,83],[342,90,617,44],[342,91,617,4],[343,0,618,3],[346,38,620,18,"region"],[346,44],[346,46,620,26,"duration"],[346,54],[346,56,620,36],[347,0,621,4],[347,13,621,9,"_runCommand"],[347,24,621,4],[347,25,621,21],[347,42,621,4],[347,44,621,40],[347,45,621,41,"region"],[347,51,621,40],[347,53,621,49,"duration"],[347,61,621,57],[347,65,621,61],[347,68,621,40],[347,69,621,4],[348,0,622,3],[351,42,624,22,"latLng"],[351,48],[351,50,624,30,"duration"],[351,58],[351,60,624,40],[352,0,625,4,"console"],[352,8,625,4,"console"],[352,15,625,11],[352,16,625,12,"warn"],[352,20,625,4],[352,21,625,17],[352,87,625,4],[354,0,626,4],[354,13,626,9,"_runCommand"],[354,24,626,4],[354,25,626,21],[354,46,626,4],[354,48,626,44],[354,49,626,45,"latLng"],[354,55,626,44],[354,57,626,53,"duration"],[354,65,626,61],[354,69,626,65],[354,72,626,44],[354,73,626,4],[355,0,627,3],[358,39,629,19,"bearing"],[358,46],[358,48,629,28,"duration"],[358,56],[358,58,629,38],[359,0,630,4,"console"],[359,8,630,4,"console"],[359,15,630,11],[359,16,630,12,"warn"],[359,20,630,4],[359,21,630,17],[359,84,630,4],[361,0,631,4],[361,13,631,9,"_runCommand"],[361,24,631,4],[361,25,631,21],[361,43,631,4],[361,45,631,41],[361,46,631,42,"bearing"],[361,53,631,41],[361,55,631,51,"duration"],[361,63,631,59],[361,67,631,63],[361,70,631,41],[361,71,631,4],[362,0,632,3],[365,44,634,24,"angle"],[365,49],[365,51,634,31,"duration"],[365,59],[365,61,634,41],[366,0,635,4,"console"],[366,8,635,4,"console"],[366,15,635,11],[366,16,635,12,"warn"],[366,20,635,4],[366,21,635,17],[366,89,635,4],[368,0,636,4],[368,13,636,9,"_runCommand"],[368,24,636,4],[368,25,636,21],[368,48,636,4],[368,50,636,46],[368,51,636,47,"angle"],[368,56,636,46],[368,58,636,54,"duration"],[368,66,636,62],[368,70,636,66],[368,73,636,46],[368,74,636,4],[369,0,637,3],[372,36,639,16,"animated"],[372,44],[372,46,639,26],[373,0,640,4],[373,13,640,9,"_runCommand"],[373,24,640,4],[373,25,640,21],[373,40,640,4],[373,42,640,38],[373,43,640,39,"animated"],[373,51,640,38],[373,52,640,4],[374,0,641,3],[377,43,643,23,"markers"],[377,50],[377,52,643,46],[378,0,643,46],[378,12,643,32,"options"],[378,19,643,46],[378,90,643,42],[378,92,643,46],[379,0,643,46],[379,35,647,8,"options"],[379,42,643,46],[379,43,645,6,"edgePadding"],[379,54,643,46],[380,0,643,46],[380,12,645,6,"edgePadding"],[380,23,643,46],[380,60,645,20],[381,0,645,22,"top"],[381,10,645,22,"top"],[381,13,645,25],[381,15,645,27],[381,16,645,20],[382,0,645,30,"right"],[382,10,645,30,"right"],[382,15,645,35],[382,17,645,37],[382,18,645,20],[383,0,645,40,"bottom"],[383,10,645,40,"bottom"],[383,16,645,46],[383,18,645,48],[383,19,645,20],[384,0,645,51,"left"],[384,10,645,51,"left"],[384,14,645,55],[384,16,645,57],[385,0,645,20],[385,9,643,46],[386,0,643,46],[386,32,647,8,"options"],[386,39,643,46],[386,40,646,6,"animated"],[386,48,643,46],[387,0,643,46],[387,12,646,6,"animated"],[387,20,643,46],[387,54,646,17],[387,58,643,46],[389,0,649,4],[389,13,649,9,"_runCommand"],[389,24,649,4],[389,25,649,21],[389,47,649,4],[389,49,649,45],[389,50,649,46,"markers"],[389,57,649,45],[389,59,649,55,"edgePadding"],[389,70,649,45],[389,72,649,68,"animated"],[389,80,649,45],[389,81,649,4],[390,0,650,3],[393,41,652,51],[394,0,652,51],[394,12,652,19,"coordinates"],[394,23,652,51],[394,94,652,33],[394,96,652,51],[395,0,652,51],[395,12,652,37,"options"],[395,19,652,51],[395,90,652,47],[395,92,652,51],[396,0,652,51],[396,36,656,8,"options"],[396,43,652,51],[396,44,654,6,"edgePadding"],[396,55,652,51],[397,0,652,51],[397,12,654,6,"edgePadding"],[397,23,652,51],[397,61,654,20],[398,0,654,22,"top"],[398,10,654,22,"top"],[398,13,654,25],[398,15,654,27],[398,16,654,20],[399,0,654,30,"right"],[399,10,654,30,"right"],[399,15,654,35],[399,17,654,37],[399,18,654,20],[400,0,654,40,"bottom"],[400,10,654,40,"bottom"],[400,16,654,46],[400,18,654,48],[400,19,654,20],[401,0,654,51,"left"],[401,10,654,51,"left"],[401,14,654,55],[401,16,654,57],[402,0,654,20],[402,9,652,51],[403,0,652,51],[403,33,656,8,"options"],[403,40,652,51],[403,41,655,6,"animated"],[403,49,652,51],[404,0,652,51],[404,12,655,6,"animated"],[404,20,652,51],[404,55,655,17],[404,59,652,51],[406,0,658,4],[406,13,658,9,"_runCommand"],[406,24,658,4],[406,25,658,21],[406,43,658,4],[406,45,658,41],[406,46,658,42,"coordinates"],[406,57,658,41],[406,59,658,55,"edgePadding"],[406,70,658,41],[406,72,658,68,"animated"],[406,80,658,41],[406,81,658,4],[407,0,659,3],[415,22,667,8,"Platform"],[415,44,667,17,"OS"],[415,46,667,8],[415,51,667,24],[415,60],[421,50,668,19,"NativeModules"],[421,77,668,33,"AirMapModule"],[421,89,668,19],[421,90,668,46,"getMapBoundaries"],[421,106,668,19],[421,107,668,63],[421,112,668,68,"_getHandle"],[421,122,668,63],[421,124,668,19],[421,125],[427,22,669,15,"Platform"],[427,44,669,24,"OS"],[427,46,669,15],[427,51,669,31],[427,56],[433,50,670,19],[433,55,670,24,"_runCommand"],[433,66,670,19],[433,67,670,36],[433,85,670,19],[433,87,670,56],[433,89,670,19],[433,90],[439,49,672,11,"Promise"],[439,56,672,18],[439,57,672,19,"reject"],[439,63,672,11],[439,64,672,26],[439,113,672,11],[439,114],[450,39,675,19,"northEast"],[450,48],[450,50,675,30,"southWest"],[450,59],[450,61,675,41],[451,0,676,4],[451,13,676,9,"_runCommand"],[451,24,676,4],[451,25,676,21],[451,43,676,4],[451,45,676,41],[451,46,676,42,"northEast"],[451,55,676,41],[451,57,676,53,"southWest"],[451,66,676,41],[451,67,676,4],[452,0,677,3],[455,48,679,28,"activeLevelIndex"],[455,64],[455,66,679,46],[456,0,680,4],[456,13,680,9,"_runCommand"],[456,24,680,4],[456,25,680,21],[456,52,680,4],[456,54,680,50],[456,55,680,51,"activeLevelIndex"],[456,71,680,50],[456,72,680,4],[457,0,681,3],[460,35,697,15,"args"],[460,39],[460,41,697,21],[461,0,697,21],[463,0,701,4],[463,12,701,8,"Platform"],[463,34,701,17,"OS"],[463,36,701,8],[463,41,701,24],[463,46,701,8],[463,50,701,34,"arguments"],[463,59,701,43],[463,60,701,44,"length"],[463,66,701,34],[463,71,701,55],[463,72,701,4],[463,74,701,59],[464,0,702,6,"console"],[464,10,702,6,"console"],[464,17,702,13],[464,18,702,14,"warn"],[464,22,702,6],[464,23,702,19],[464,101,702,6],[465,0,703,6],[465,14,703,12,"width"],[465,19,703,17],[465,22,703,20,"arguments"],[465,31,703,29],[465,32,703,30],[465,33,703,29],[465,34,703,6],[466,0,704,6],[466,14,704,12,"height"],[466,20,704,18],[466,23,704,21,"arguments"],[466,32,704,30],[466,33,704,31],[466,34,704,30],[466,35,704,6],[467,0,705,6],[467,14,705,12,"region"],[467,20,705,18],[467,23,705,21,"arguments"],[467,32,705,30],[467,33,705,31],[467,34,705,30],[467,35,705,6],[468,0,706,6],[468,14,706,12,"callback"],[468,22,706,20],[468,25,706,23,"arguments"],[468,34,706,32],[468,35,706,33],[468,36,706,32],[468,37,706,6],[470,0,707,6],[470,15,707,11,"_runCommand"],[470,26,707,6],[470,27,707,23],[470,41,707,6],[470,43,707,39],[470,44,708,8,"width"],[470,49,708,13],[470,53,708,17],[470,54,707,39],[470,56,709,8,"height"],[470,62,709,14],[470,66,709,18],[470,67,707,39],[470,69,710,8,"region"],[470,75,710,14],[470,79,710,18],[470,81,707,39],[470,83,711,8],[470,88,707,39],[470,90,712,8],[470,91,707,39],[470,93,713,8],[470,101,707,39],[470,103,714,8,"callback"],[470,111,707,39],[470,112,707,6],[472,0,716,6],[472,17,716,13,"undefined"],[472,26,716,6],[473,0,717,5],[475,0,720,4],[475,12,720,10,"config"],[475,18,720,16],[475,21,720,19],[476,0,721,6,"width"],[476,10,721,6,"width"],[476,15,721,11],[476,17,721,13,"args"],[476,21,721,17],[476,22,721,18,"width"],[476,27,721,13],[476,31,721,27],[476,32,720,19],[477,0,722,6,"height"],[477,10,722,6,"height"],[477,16,722,12],[477,18,722,14,"args"],[477,22,722,18],[477,23,722,19,"height"],[477,29,722,14],[477,33,722,29],[477,34,720,19],[478,0,723,6,"region"],[478,10,723,6,"region"],[478,16,723,12],[478,18,723,14,"args"],[478,22,723,18],[478,23,723,19,"region"],[478,29,723,14],[478,33,723,29],[478,35,720,19],[479,0,724,6,"format"],[479,10,724,6,"format"],[479,16,724,12],[479,18,724,14,"args"],[479,22,724,18],[479,23,724,19,"format"],[479,29,724,14],[479,33,724,29],[479,38,720,19],[480,0,725,6,"quality"],[480,10,725,6,"quality"],[480,17,725,13],[480,19,725,15,"args"],[480,23,725,19],[480,24,725,20,"quality"],[480,31,725,15],[480,35,725,31],[480,38,720,19],[481,0,726,6,"result"],[481,10,726,6,"result"],[481,16,726,12],[481,18,726,14,"args"],[481,22,726,18],[481,23,726,19,"result"],[481,29,726,14],[481,33,726,29],[482,0,720,19],[482,9,720,4],[483,0,728,4],[483,12,728,9,"config"],[483,18,728,15],[483,19,728,16,"format"],[483,25,728,9],[483,30,728,27],[483,35,728,8],[483,39,729,9,"config"],[483,45,729,15],[483,46,729,16,"format"],[483,52,729,9],[483,57,729,27],[483,62,728,4],[483,64,729,35],[483,70,729,41],[483,74,729,45,"Error"],[483,79,729,41],[483,80,729,51],[483,106,729,41],[483,107,729,35],[484,0,730,4],[484,12,730,9,"config"],[484,18,730,15],[484,19,730,16,"result"],[484,25,730,9],[484,30,730,27],[484,36,730,8],[484,40,731,9,"config"],[484,46,731,15],[484,47,731,16,"result"],[484,53,731,9],[484,58,731,27],[484,66,730,4],[484,68,731,38],[484,74,731,44],[484,78,731,48,"Error"],[484,83,731,44],[484,84,731,54],[484,110,731,44],[484,111,731,38],[486,0,734,4],[486,12,734,8,"Platform"],[486,34,734,17,"OS"],[486,36,734,8],[486,41,734,24],[486,50,734,4],[486,52,734,35],[487,0,735,6],[487,17,735,13,"NativeModules"],[487,44,735,27,"AirMapModule"],[487,56,735,13],[487,57,735,40,"takeSnapshot"],[487,69,735,13],[487,70,735,53],[487,75,735,58,"_getHandle"],[487,85,735,53],[487,87,735,13],[487,89,735,72,"config"],[487,95,735,13],[487,96,735,6],[488,0,736,5],[488,9,734,4],[488,15,736,11],[488,19,736,15,"Platform"],[488,41,736,24,"OS"],[488,43,736,15],[488,48,736,31],[488,53,736,11],[488,55,736,38],[489,0,737,6],[489,17,737,13],[489,21,737,17,"Promise"],[489,28,737,13],[489,29,737,25],[489,39,737,26,"resolve"],[489,46,737,25],[489,48,737,35,"reject"],[489,54,737,25],[489,56,737,46],[490,0,738,8],[490,12,738,8],[490,18,738,12],[490,19,738,13,"_runCommand"],[490,30,738,8],[490,31,738,25],[490,45,738,8],[490,47,738,41],[490,48,739,10,"config"],[490,54,739,16],[490,55,739,17,"width"],[490,60,738,41],[490,62,740,10,"config"],[490,68,740,16],[490,69,740,17,"height"],[490,75,738,41],[490,77,741,10,"config"],[490,83,741,16],[490,84,741,17,"region"],[490,90,738,41],[490,92,742,10,"config"],[490,98,742,16],[490,99,742,17,"format"],[490,105,738,41],[490,107,743,10,"config"],[490,113,743,16],[490,114,743,17,"quality"],[490,121,738,41],[490,123,744,10,"config"],[490,129,744,16],[490,130,744,17,"result"],[490,136,738,41],[490,138,745,10],[490,148,745,11,"err"],[490,151,745,10],[490,153,745,16,"snapshot"],[490,161,745,10],[490,163,745,29],[491,0,746,12],[491,18,746,16,"err"],[491,21,746,12],[491,23,746,21],[492,0,747,14,"reject"],[492,16,747,14,"reject"],[492,22,747,20],[492,23,747,21,"err"],[492,26,747,20],[492,27,747,14],[493,0,748,13],[493,15,746,12],[493,21,748,19],[494,0,749,14,"resolve"],[494,16,749,14,"resolve"],[494,23,749,21],[494,24,749,22,"snapshot"],[494,32,749,21],[494,33,749,14],[495,0,750,13],[496,0,751,11],[496,13,738,41],[496,14,738,8],[497,0,753,7],[497,11,737,13],[497,12,737,6],[498,0,754,5],[500,0,755,4],[500,15,755,11,"Promise"],[500,22,755,18],[500,23,755,19,"reject"],[500,29,755,11],[500,30,755,26],[500,75,755,11],[500,76,755,4],[501,0,756,3],[504,41,767,21,"coordinate"],[504,51],[504,53,767,33],[505,0,768,4],[505,12,768,8,"Platform"],[505,34,768,17,"OS"],[505,36,768,8],[505,41,768,24],[505,50,768,4],[505,52,768,35],[506,0,769,6],[506,17,769,13,"NativeModules"],[506,44,769,27,"AirMapModule"],[506,56,769,13],[506,57,769,40,"pointForCoordinate"],[506,75,769,13],[506,76,769,59],[506,81,769,64,"_getHandle"],[506,91,769,59],[506,93,769,13],[506,95,769,78,"coordinate"],[506,105,769,13],[506,106,769,6],[507,0,770,5],[507,9,768,4],[507,15,770,11],[507,19,770,15,"Platform"],[507,41,770,24,"OS"],[507,43,770,15],[507,48,770,31],[507,53,770,11],[507,55,770,38],[508,0,771,6],[508,17,771,13],[508,22,771,18,"_runCommand"],[508,33,771,13],[508,34,771,30],[508,54,771,13],[508,56,771,52],[508,57,771,53,"coordinate"],[508,67,771,52],[508,68,771,13],[508,69,771,6],[509,0,772,5],[511,0,773,4],[511,15,773,11,"Promise"],[511,22,773,18],[511,23,773,19,"reject"],[511,29,773,11],[511,30,773,26],[511,81,773,11],[511,82,773,4],[512,0,774,3],[515,41,785,21,"point"],[515,46],[515,48,785,28],[516,0,786,4],[516,12,786,8,"Platform"],[516,34,786,17,"OS"],[516,36,786,8],[516,41,786,24],[516,50,786,4],[516,52,786,35],[517,0,787,6],[517,17,787,13,"NativeModules"],[517,44,787,27,"AirMapModule"],[517,56,787,13],[517,57,787,40,"coordinateForPoint"],[517,75,787,13],[517,76,787,59],[517,81,787,64,"_getHandle"],[517,91,787,59],[517,93,787,13],[517,95,787,78,"point"],[517,100,787,13],[517,101,787,6],[518,0,788,5],[518,9,786,4],[518,15,788,11],[518,19,788,15,"Platform"],[518,41,788,24,"OS"],[518,43,788,15],[518,48,788,31],[518,53,788,11],[518,55,788,38],[519,0,789,6],[519,17,789,13],[519,22,789,18,"_runCommand"],[519,33,789,13],[519,34,789,30],[519,54,789,13],[519,56,789,52],[519,57,789,53,"point"],[519,62,789,52],[519,63,789,13],[519,64,789,6],[520,0,790,5],[522,0,791,4],[522,15,791,11,"Promise"],[522,22,791,18],[522,23,791,19,"reject"],[522,29,791,11],[522,30,791,26],[522,81,791,11],[522,82,791,4],[523,0,792,3],[526,43,801,23,"region"],[526,49],[526,51,801,31],[527,0,802,4],[527,15,802,11],[528,0,803,6,"northEast"],[528,10,803,6,"northEast"],[528,19,803,15],[528,21,803,17],[529,0,804,8,"latitude"],[529,12,804,8,"latitude"],[529,20,804,16],[529,22,804,18,"region"],[529,28,804,24],[529,29,804,25,"latitude"],[529,37,804,18],[529,40,804,37,"region"],[529,46,804,43],[529,47,804,44,"latitudeDelta"],[529,60,804,37],[529,63,804,60],[529,64,803,17],[530,0,805,8,"longitude"],[530,12,805,8,"longitude"],[530,21,805,17],[530,23,805,19,"region"],[530,29,805,25],[530,30,805,26,"longitude"],[530,39,805,19],[530,42,805,39,"region"],[530,48,805,45],[530,49,805,46,"longitudeDelta"],[530,63,805,39],[530,66,805,63],[531,0,803,17],[531,11,802,11],[532,0,807,6,"southWest"],[532,10,807,6,"southWest"],[532,19,807,15],[532,21,807,17],[533,0,808,8,"latitude"],[533,12,808,8,"latitude"],[533,20,808,16],[533,22,808,18,"region"],[533,28,808,24],[533,29,808,25,"latitude"],[533,37,808,18],[533,40,808,37,"region"],[533,46,808,43],[533,47,808,44,"latitudeDelta"],[533,60,808,37],[533,63,808,60],[533,64,807,17],[534,0,809,8,"longitude"],[534,12,809,8,"longitude"],[534,21,809,17],[534,23,809,19,"region"],[534,29,809,25],[534,30,809,26,"longitude"],[534,39,809,19],[534,42,809,39,"region"],[534,48,809,45],[534,49,809,46,"longitudeDelta"],[534,63,809,39],[534,66,809,63],[535,0,807,17],[536,0,802,11],[536,9,802,4],[537,0,812,3],[540,40,814,20,"name"],[540,44],[540,46,814,26],[541,0,815,4],[541,15,815,11,"NativeModules"],[541,42,815,25,"UIManager"],[541,51,815,11],[541,52,815,35],[541,93,815,49],[541,98,815,54,"props"],[541,103,815,49],[541,104,815,60,"provider"],[541,112,815,35],[541,113,815,11],[541,115,815,71,"Commands"],[541,123,815,11],[541,124,815,80,"name"],[541,128,815,11],[541,129,815,4],[542,0,816,3],[545,41,818,21,"name"],[545,45],[545,47,818,27],[546,0,819,4],[546,15,819,11,"NativeModules"],[546,42,819,28],[546,83,819,42],[546,88,819,47,"props"],[546,93,819,42],[546,94,819,53,"provider"],[546,102,819,28],[546,103,819,11],[546,117,819,73,"name"],[546,121,819,11],[546,122,819,4],[547,0,820,3],[550,35,822,15],[551,0,823,4],[551,15,823,11],[551,48,823,26],[551,53,823,31,"map"],[551,56,823,11],[551,57,823,4],[552,0,824,3],[555,34,826,14,"name"],[555,38],[555,40,826,20,"args"],[555,44],[555,46,826,26],[556,0,827,4],[556,16,827,12,"Platform"],[556,38,827,21,"OS"],[556,40,827,4],[557,0,828,6],[557,15,828,11],[557,24,828,6],[558,0,829,8],[558,19,829,15,"NativeModules"],[558,46,829,29,"UIManager"],[558,55,829,15],[558,56,829,39,"dispatchViewManagerCommand"],[558,82,829,15],[558,83,830,10],[558,88,830,15,"_getHandle"],[558,98,830,10],[558,100,829,15],[558,102,831,10],[558,107,831,15,"_uiManagerCommand"],[558,124,831,10],[558,125,831,33,"name"],[558,129,831,10],[558,130,829,15],[558,132,832,10,"args"],[558,136,829,15],[558,137,829,8],[560,0,835,6],[560,15,835,11],[560,20,835,6],[561,0,836,8],[561,19,836,15],[561,24,836,20,"_mapManagerCommand"],[561,42,836,15],[561,43,836,39,"name"],[561,47,836,15],[561,64,836,45],[561,69,836,50,"_getHandle"],[561,79,836,45],[561,81,836,15],[561,123,836,67,"args"],[561,127,836,15],[561,130,836,8],[563,0,838,6],[564,0,839,8],[564,19,839,15,"Promise"],[564,26,839,22],[564,27,839,23,"reject"],[564,33,839,15],[564,68,839,62,"Platform"],[564,90,839,71,"OS"],[564,92,839,15],[564,93,839,8],[565,0,827,4],[566,0,841,3],[569,31,843,11],[570,0,843,11],[572,0,844,4],[572,12,844,8,"props"],[572,17,844,4],[574,0,846,4],[574,12,846,8],[574,17,846,13,"state"],[574,22,846,8],[574,23,846,19,"isReady"],[574,30,846,4],[574,32,846,28],[575,0,847,6,"props"],[575,10,847,6,"props"],[575,15,847,11],[576,0,848,8,"region"],[576,12,848,8,"region"],[576,18,848,14],[576,20,848,16],[576,24,847,11],[577,0,849,8,"initialRegion"],[577,12,849,8,"initialRegion"],[577,25,849,21],[577,27,849,23],[577,31,847,11],[578,0,850,8,"onMarkerPress"],[578,12,850,8,"onMarkerPress"],[578,25,850,21],[578,27,850,23],[578,32,850,28,"_onMarkerPress"],[578,46,847,11],[579,0,851,8,"onChange"],[579,12,851,8,"onChange"],[579,20,851,16],[579,22,851,18],[579,27,851,23,"_onChange"],[579,36,847,11],[580,0,852,8,"onMapReady"],[580,12,852,8,"onMapReady"],[580,22,852,18],[580,24,852,20],[580,29,852,25,"_onMapReady"],[580,40,847,11],[581,0,853,8,"onLayout"],[581,12,853,8,"onLayout"],[581,20,853,16],[581,22,853,18],[581,27,853,23,"_onLayout"],[582,0,847,11],[582,13,854,11],[582,18,854,16,"props"],[582,23,847,11],[582,24,847,6],[584,0,856,6],[584,14,856,10,"Platform"],[584,36,856,19,"OS"],[584,38,856,10],[584,43,856,26],[584,48,856,10],[584,52,856,35,"props"],[584,57,856,40],[584,58,856,41,"provider"],[584,66,856,35],[584,71,856,54,"ProviderConstants"],[584,88,856,71],[584,89,856,72,"PROVIDER_DEFAULT"],[584,105,856,10],[584,109,857,11,"GOOGLE_MAPS_ONLY_TYPES"],[584,131,857,33],[584,132,857,34,"includes"],[584,140,857,11],[584,141,857,43,"props"],[584,146,857,48],[584,147,857,49,"mapType"],[584,154,857,11],[584,155,856,6],[584,157,857,59],[585,0,858,8,"props"],[585,12,858,8,"props"],[585,17,858,13],[585,18,858,14,"mapType"],[585,25,858,8],[585,28,858,24,"MAP_TYPES"],[585,37,858,33],[585,38,858,34,"standard"],[585,46,858,8],[586,0,859,7],[588,0,860,6,"props"],[588,10,860,6,"props"],[588,15,860,11],[588,16,860,12,"handlePanDrag"],[588,29,860,6],[588,32,860,28],[588,33,860,29],[588,34,860,30,"props"],[588,39,860,35],[588,40,860,36,"onPanDrag"],[588,49,860,6],[589,0,861,5],[589,9,846,4],[589,15,861,11],[590,0,862,6,"props"],[590,10,862,6,"props"],[590,15,862,11],[590,18,862,14],[591,0,863,8,"style"],[591,12,863,8,"style"],[591,17,863,13],[591,19,863,15],[591,24,863,20,"props"],[591,29,863,15],[591,30,863,26,"style"],[591,35,862,14],[592,0,864,8,"region"],[592,12,864,8,"region"],[592,18,864,14],[592,20,864,16],[592,24,862,14],[593,0,865,8,"initialRegion"],[593,12,865,8,"initialRegion"],[593,25,865,21],[593,27,865,23],[593,31,862,14],[594,0,866,8,"onMarkerPress"],[594,12,866,8,"onMarkerPress"],[594,25,866,21],[594,27,866,23],[594,32,866,28,"_onMarkerPress"],[594,46,862,14],[595,0,867,8,"onChange"],[595,12,867,8,"onChange"],[595,20,867,16],[595,22,867,18],[595,27,867,23,"_onChange"],[595,36,862,14],[596,0,868,8,"onMapReady"],[596,12,868,8,"onMapReady"],[596,22,868,18],[596,24,868,20],[596,29,868,25,"_onMapReady"],[596,40,862,14],[597,0,869,8,"onLayout"],[597,12,869,8,"onLayout"],[597,20,869,16],[597,22,869,18],[597,27,869,23,"_onLayout"],[598,0,862,14],[598,11,862,6],[599,0,871,5],[601,0,873,4],[601,12,873,8,"Platform"],[601,34,873,17,"OS"],[601,36,873,8],[601,41,873,24],[601,50,873,8],[601,54,873,37],[601,59,873,42,"props"],[601,64,873,37],[601,65,873,48,"liteMode"],[601,73,873,4],[601,75,873,58],[602,0,874,6],[602,17,875,8],[602,46,875,9],[602,56,875,8],[603,0,876,10],[603,12,876,10],[603,15,876,13],[603,17,876,15],[603,30,876,15,"ref"],[603,34,876,18],[603,36,876,22],[604,0,876,24],[604,14,876,24],[604,20,876,28],[604,21,876,29,"map"],[604,24,876,24],[604,27,876,35,"ref"],[604,31,876,24],[605,0,876,41],[606,0,875,8],[606,13,877,14,"props"],[606,18,875,8],[607,0,875,8],[608,0,875,8],[609,0,875,8],[610,0,875,8],[611,0,875,8],[611,13,874,6],[612,0,880,5],[614,0,882,4],[614,12,882,10,"AIRMap"],[614,18,882,16],[614,21,882,19,"getAirMapComponent"],[614,39,882,37],[614,40,882,38],[614,45,882,43,"props"],[614,50,882,38],[614,51,882,49,"provider"],[614,59,882,37],[614,60,882,4],[615,0,884,4],[615,15,885,6],[615,44,885,7],[615,50,885,6],[616,0,886,8],[616,10,886,8],[616,13,886,11],[616,15,886,13],[616,28,886,13,"ref"],[616,33,886,16],[616,35,886,20],[617,0,886,22],[617,12,886,22],[617,18,886,26],[617,19,886,27,"map"],[617,22,886,22],[617,25,886,33,"ref"],[617,30,886,22],[618,0,886,39],[619,0,885,6],[619,11,887,12,"props"],[619,16,885,6],[620,0,885,6],[621,0,885,6],[622,0,885,6],[623,0,885,6],[624,0,885,6],[624,11,884,4],[625,0,890,3],[628,4,506,22,"React"],[628,19,506,28,"Component"],[628,28],[631,0,893,0,"MapView"],[631,2,893,0,"MapView"],[631,9,893,7],[631,10,893,8,"propTypes"],[631,19,893,0],[631,22,893,20,"propTypes"],[631,31,893,0],[632,0,894,0,"MapView"],[632,2,894,0,"MapView"],[632,9,894,7],[632,10,894,8,"viewConfig"],[632,20,894,0],[632,23,894,21,"viewConfig"],[632,33,894,0],[633,0,895,0,"MapView"],[633,2,895,0,"MapView"],[633,9,895,7],[633,10,895,8,"childContextTypes"],[633,27,895,0],[633,30,895,28,"childContextTypes"],[633,64,895,0],[634,0,897,0,"MapView"],[634,2,897,0,"MapView"],[634,9,897,7],[634,10,897,8,"MAP_TYPES"],[634,19,897,0],[634,22,897,20,"MAP_TYPES"],[634,31,897,0],[636,0,899,0],[636,6,899,6,"nativeComponent"],[636,21,899,21],[636,24,899,24],[636,33,899,6,"nativeComponent"],[636,48,899,24],[636,49,899,24,"Component"],[636,58,899,33],[637,0,899,33],[637,11,899,37],[637,52,899,60,"Component"],[637,61,899,37],[637,63,899,71,"MapView"],[637,70,899,37],[637,72,899,80],[638,0,900,2,"nativeOnly"],[638,6,900,2,"nativeOnly"],[638,16,900,12],[638,18,900,14],[639,0,901,4,"onChange"],[639,8,901,4,"onChange"],[639,16,901,12],[639,18,901,14],[639,22,900,14],[640,0,902,4,"onMapReady"],[640,8,902,4,"onMapReady"],[640,18,902,14],[640,20,902,16],[640,24,900,14],[641,0,903,4,"onKmlReady"],[641,8,903,4,"onKmlReady"],[641,18,903,14],[641,20,903,16],[641,24,900,14],[642,0,904,4,"handlePanDrag"],[642,8,904,4,"handlePanDrag"],[642,21,904,17],[642,23,904,19],[643,0,900,14],[644,0,899,80],[644,5,899,37],[644,6,899,33],[645,0,899,33],[645,3,899,0],[647,0,907,0],[647,6,907,6,"airMaps"],[647,13,907,13],[647,16,907,16],[648,0,908,2,"default"],[648,4,908,2,"default"],[648,11,908,9],[648,13,908,11,"nativeComponent"],[648,28,908,26],[648,29,908,27],[648,37,908,26],[649,0,907,16],[649,3,907,0],[651,0,910,0],[651,6,910,4,"Platform"],[651,28,910,13,"OS"],[651,30,910,4],[651,35,910,20],[651,44,910,0],[651,46,910,31],[652,0,911,2,"airMaps"],[652,4,911,2,"airMaps"],[652,11,911,9],[652,12,911,10,"google"],[652,18,911,2],[652,21,911,19,"airMaps"],[652,28,911,26],[652,29,911,27,"default"],[652,36,911,2],[653,0,912,1],[653,3,910,0],[653,9,912,7],[654,0,913,2,"airMaps"],[654,4,913,2,"airMaps"],[654,11,913,9],[654,12,913,10,"google"],[654,18,913,2],[654,21,913,19,"googleMapIsInstalled"],[654,66,913,42,"nativeComponent"],[654,81,913,57],[654,82,913,58],[654,96,913,57],[654,97,913,19],[654,100,914,4],[654,155,914,32],[654,259,914,4],[654,260,913,2],[655,0,915,1],[657,0,916,0],[657,6,916,6,"getAirMapComponent"],[657,24,916,24],[657,27,916,27],[657,36,916,6,"getAirMapComponent"],[657,54,916,27],[657,55,916,27,"provider"],[657,63,916,35],[658,0,916,35],[658,11,916,39,"airMaps"],[658,18,916,46],[658,19,916,47,"provider"],[658,27,916,55],[658,31,916,59],[658,40,916,46],[658,41,916,35],[659,0,916,35],[659,3,916,0],[661,0,918,0],[661,6,918,6,"AIRMapLite"],[661,16,918,16],[661,19,918,19,"NativeModules"],[661,46,918,33,"UIManager"],[661,55,918,19],[661,56,918,43,"AIRMapLite"],[661,66,918,19],[661,70,919,2],[661,111,919,25],[661,123,919,2],[661,125,919,39,"MapView"],[661,132,919,2],[661,134,919,48],[662,0,920,4,"nativeOnly"],[662,4,920,4,"nativeOnly"],[662,14,920,14],[662,16,920,16],[663,0,921,6,"onChange"],[663,6,921,6,"onChange"],[663,14,921,14],[663,16,921,16],[663,20,920,16],[664,0,922,6,"onMapReady"],[664,6,922,6,"onMapReady"],[664,16,922,16],[664,18,922,18],[664,22,920,16],[665,0,923,6,"handlePanDrag"],[665,6,923,6,"handlePanDrag"],[665,19,923,19],[665,21,923,21],[666,0,920,16],[667,0,919,48],[667,3,919,2],[667,4,918,0],[669,0,927,7],[669,6,927,13,"Animated"],[669,14,927,21],[669,17,927,24,"RNAnimated"],[669,39,927,35,"createAnimatedComponent"],[669,62,927,24],[669,63,927,59,"MapView"],[669,70,927,24],[669,71,927,7],[673,0,929,7],[673,6,929,13,"ProviderPropType"],[673,22,929,29],[673,25,929,32,"PropTypes"],[673,44,929,42,"oneOf"],[673,49,929,32],[673,50,929,48,"Object"],[673,56,929,54],[673,57,929,55,"values"],[673,63,929,48],[673,64,929,62,"ProviderConstants"],[673,81,929,48],[673,82,929,32],[673,83,929,7],[676,0,939,0,"MapView"],[676,2,939,0,"MapView"],[676,9,939,7],[676,10,939,8,"Marker"],[676,16,939,0],[676,19,939,17,"MapMarker"],[676,37,939,0],[677,0,940,0,"MapView"],[677,2,940,0,"MapView"],[677,9,940,7],[677,10,940,8,"Polyline"],[677,18,940,0],[677,21,940,19,"MapPolyline"],[677,41,940,0],[678,0,941,0,"MapView"],[678,2,941,0,"MapView"],[678,9,941,7],[678,10,941,8,"Polygon"],[678,17,941,0],[678,20,941,18,"MapPolygon"],[678,39,941,0],[679,0,942,0,"MapView"],[679,2,942,0,"MapView"],[679,9,942,7],[679,10,942,8,"Circle"],[679,16,942,0],[679,19,942,17,"MapCircle"],[679,37,942,0],[680,0,943,0,"MapView"],[680,2,943,0,"MapView"],[680,9,943,7],[680,10,943,8,"UrlTile"],[680,17,943,0],[680,20,943,18,"MapUrlTile"],[680,39,943,0],[681,0,944,0,"MapView"],[681,2,944,0,"MapView"],[681,9,944,7],[681,10,944,8,"LocalTile"],[681,19,944,0],[681,22,944,20,"MapLocalTile"],[681,43,944,0],[682,0,945,0,"MapView"],[682,2,945,0,"MapView"],[682,9,945,7],[682,10,945,8,"Overlay"],[682,17,945,0],[682,20,945,18,"MapOverlay"],[682,39,945,0],[683,0,946,0,"MapView"],[683,2,946,0,"MapView"],[683,9,946,7],[683,10,946,8,"Callout"],[683,17,946,0],[683,20,946,18,"MapCallout"],[683,39,946,0],[684,0,947,0],[684,25,947,14,"MapView"],[684,32,947,0],[684,34,947,23,"ProviderConstants"],[684,51,947,0],[685,0,948,0,"MapView"],[685,2,948,0,"MapView"],[685,9,948,7],[685,10,948,8,"ProviderPropType"],[685,26,948,0],[685,29,948,27,"ProviderPropType"],[685,45,948,0],[686,0,950,0,"MapView"],[686,2,950,0,"MapView"],[686,9,950,7],[686,10,950,8,"Animated"],[686,18,950,0],[686,21,950,19,"Animated"],[686,29,950,0],[687,0,951,0,"MapView"],[687,2,951,0,"MapView"],[687,9,951,7],[687,10,951,8,"AnimatedRegion"],[687,24,951,0],[687,27,951,25,"AnimatedRegion"],[687,50,951,0],[688,18,953,15,"MapView"],[688,25]]},"type":"js/module"}]}