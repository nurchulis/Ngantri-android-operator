{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"react-native/Libraries/Animated/src/AnimatedEvent","data":{"isAsync":false}},{"name":"react-native-gesture-handler","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"invariant\"));\n\n  var _AnimatedEvent = _$$_REQUIRE(_dependencyMap[12], \"react-native/Libraries/Animated/src/AnimatedEvent\");\n\n  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[13], \"react-native-gesture-handler\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/nurchulis/Documents/ngantri/ngantri-android-operator/node_modules/react-native-gesture-handler/DrawerLayout.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    DrawerLayout: {\n      displayName: \"DrawerLayout\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/nurchulis/Documents/ngantri/ngantri-android-operator/node_modules/react-native-gesture-handler/DrawerLayout.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = _wrapComponent(\"DrawerLayout\")((_temp = _class = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    function DrawerLayout(_props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerLayout).call(this, _props, context));\n\n      _this._updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        _this._onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], {\n          useNativeDriver: props.useNativeAnimations\n        });\n      };\n\n      _this._handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this._emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this._openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._handleRelease(nativeEvent);\n        } else if (nativeEvent.state === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this._onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this.state.drawerShown && nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {\n          _this.closeDrawer();\n        }\n      };\n\n      _this._handleRelease = function (nativeEvent) {\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var _this$state = _this.state,\n            drawerShown = _this$state.drawerShown,\n            containerWidth = _this$state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this._animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n\n      _this._animateDrawer = function (fromValue, toValue, velocity) {\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        _this.state.drawerTranslation.setValue(fromValue);\n\n        var willShow = toValue !== 0;\n\n        _this.setState({\n          drawerShown: willShow\n        });\n\n        _this._emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations\n        }).start(function (_ref4) {\n          var finished = _ref4.finished;\n\n          if (finished) {\n            _this._emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen && _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose && _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(0, _this.props.drawerWidth, options.velocity ? options.velocity : 0);\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(_this.props.drawerWidth, 0, options.velocity ? options.velocity : 0);\n      };\n\n      _this._renderOverlay = function () {\n        (0, _invariant.default)(_this._openValue, 'should be set');\n\n        var overlayOpacity = _this._openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 0.7],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this._onTapHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this.state.drawerShown ? 'auto' : 'none',\n          style: [styles.overlay, dynamicOverlayStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          }\n        }));\n      };\n\n      _this._renderDrawer = function () {\n        var drawerShown = _this.state.drawerShown;\n        var _this$props2 = _this.props,\n            drawerBackgroundColor = _this$props2.drawerBackgroundColor,\n            drawerWidth = _this$props2.drawerWidth,\n            drawerPosition = _this$props2.drawerPosition,\n            drawerType = _this$props2.drawerType,\n            contentContainerStyle = _this$props2.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this._openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: fromLeft ? 'row' : 'row-reverse'\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this._handleContainerLayout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          }\n        }, _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          accessibilityViewIsModal: drawerShown,\n          style: [styles.drawerContainer, drawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: [styles.drawer, dynamicDrawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          }\n        }, _this.props.renderNavigationView(_this._openValue))));\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        drawerShown: false,\n        containerWidth: 0\n      };\n\n      _this._updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this._updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state2 = this.state,\n            drawerShown = _this$state2.drawerShown,\n            containerWidth = _this$state2.containerWidth;\n        var _this$props3 = this.props,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            edgeWidth = _this$props3.edgeWidth,\n            minSwipeDistance = _this$props3.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          right: drawerShown ? 0 : edgeWidth - containerWidth\n        } : {\n          left: drawerShown ? 0 : edgeWidth - containerWidth\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, {\n          hitSlop: hitSlop,\n          minOffsetX: gestureOrientation * minSwipeDistance,\n          onGestureEvent: this._onGestureEvent,\n          onHandlerStateChange: this._openingHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          }\n        }, this._renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(_react.Component), _class.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'black'\n  }, _class.positions = {\n    Left: 'left',\n    Right: 'right'\n  }, _temp));\n\n  var _default2 = DrawerLayout;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    drawer: {\n      flex: 0\n    },\n    drawerContainer: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","map":[[23,0,11,0],[27,0,12,0],[29,0,13,0],[31,0,14,0],[33,0,16,0],[62,0,22,0],[62,6,22,6,"DRAG_TOSS"],[62,15,22,15],[62,18,22,18],[62,22,22,0],[63,0,24,0],[63,6,24,6,"IDLE"],[63,10,24,10],[63,13,24,13],[63,19,24,0],[64,0,25,0],[64,6,25,6,"DRAGGING"],[64,14,25,14],[64,17,25,17],[64,27,25,0],[65,0,26,0],[65,6,26,6,"SETTLING"],[65,14,26,14],[65,17,26,17],[65,27,26,0],[70,0,88,2],[70,26,88,14,"props"],[70,32,88,2],[70,34,88,31,"context"],[70,41,88,2],[70,43,88,45],[71,0,88,45],[73,0,88,45],[74,0,89,4],[74,116,89,10,"props"],[74,122,89,4],[74,124,89,17,"context"],[74,131,89,4],[76,0,88,45],[76,12,117,2,"_updateAnimatedEvent"],[76,32,88,45],[76,35,117,25],[76,45,117,26,"props"],[76,50,117,25],[76,52,117,43,"state"],[76,57,117,25],[76,59,117,64],[77,0,117,64],[77,12,119,12,"drawerPosition"],[77,26,117,64],[77,29,119,56,"props"],[77,34,117,64],[77,35,119,12,"drawerPosition"],[77,49,117,64],[78,0,117,64],[78,12,119,28,"drawerWidth"],[78,23,117,64],[78,26,119,56,"props"],[78,31,117,64],[78,32,119,28,"drawerWidth"],[78,43,117,64],[79,0,117,64],[79,12,119,41,"drawerType"],[79,22,117,64],[79,25,119,56,"props"],[79,30,117,64],[79,31,119,41,"drawerType"],[79,41,117,64],[80,0,117,64],[80,12,121,13,"dragXValue"],[80,22,117,64],[80,25,125,8,"state"],[80,30,117,64],[80,31,121,6,"dragX"],[80,36,117,64],[81,0,117,64],[81,12,122,14,"touchXValue"],[81,23,117,64],[81,26,125,8,"state"],[81,31,117,64],[81,32,122,6,"touchX"],[81,38,117,64],[82,0,117,64],[82,12,123,6,"drawerTranslation"],[82,29,117,64],[82,32,125,8,"state"],[82,37,117,64],[82,38,123,6,"drawerTranslation"],[82,55,117,64],[83,0,117,64],[83,12,124,6,"containerWidth"],[83,26,117,64],[83,29,125,8,"state"],[83,34,117,64],[83,35,124,6,"containerWidth"],[83,49,117,64],[84,0,127,4],[84,12,127,8,"dragX"],[84,17,127,13],[84,20,127,16,"dragXValue"],[84,30,127,4],[85,0,128,4],[85,12,128,8,"touchX"],[85,18,128,14],[85,21,128,17,"touchXValue"],[85,32,128,4],[87,0,130,4],[87,12,130,8,"drawerPosition"],[87,26,130,22],[87,31,130,27],[87,37,130,4],[87,39,130,35],[88,0,138,6,"dragX"],[88,10,138,6,"dragX"],[88,15,138,11],[88,18,138,14,"Animated"],[88,40,138,23,"multiply"],[88,48,138,14],[88,49,138,32],[88,53,138,36,"Animated"],[88,75,138,45,"Value"],[88,80,138,32],[88,81,138,51],[88,82,138,52],[88,83,138,32],[88,84,138,14],[88,86,138,56,"dragXValue"],[88,96,138,14],[88,97,138,6],[89,0,139,6,"touchX"],[89,10,139,6,"touchX"],[89,16,139,12],[89,19,139,15,"Animated"],[89,41,139,24,"add"],[89,44,139,15],[89,45,140,8],[89,49,140,12,"Animated"],[89,71,140,21,"Value"],[89,76,140,8],[89,77,140,27,"containerWidth"],[89,91,140,8],[89,92,139,15],[89,94,141,8,"Animated"],[89,116,141,17,"multiply"],[89,124,141,8],[89,125,141,26],[89,129,141,30,"Animated"],[89,151,141,39,"Value"],[89,156,141,26],[89,157,141,45],[89,158,141,46],[89,159,141,26],[89,160,141,8],[89,162,141,50,"touchXValue"],[89,173,141,8],[89,174,139,15],[89,175,139,6],[90,0,143,6,"touchXValue"],[90,10,143,6,"touchXValue"],[90,21,143,17],[90,22,143,18,"setValue"],[90,30,143,6],[90,31,143,27,"containerWidth"],[90,45,143,6],[91,0,144,5],[91,9,130,4],[91,15,144,11],[92,0,145,6,"touchXValue"],[92,10,145,6,"touchXValue"],[92,21,145,17],[92,22,145,18,"setValue"],[92,30,145,6],[92,31,145,27],[92,32,145,6],[93,0,146,5],[95,0,172,4],[95,12,172,8,"translationX"],[95,24,172,20],[95,27,172,23,"dragX"],[95,32,172,4],[97,0,173,4],[97,12,173,8,"drawerType"],[97,22,173,18],[97,27,173,23],[97,34,173,4],[97,36,173,32],[98,0,174,6],[98,14,174,12,"startPositionX"],[98,28,174,26],[98,31,174,29,"Animated"],[98,53,174,38,"add"],[98,56,174,29],[98,57,175,8,"touchX"],[98,63,174,29],[98,65,176,8,"Animated"],[98,87,176,17,"multiply"],[98,95,176,8],[98,96,176,26],[98,100,176,30,"Animated"],[98,122,176,39,"Value"],[98,127,176,26],[98,128,176,45],[98,129,176,46],[98,130,176,26],[98,131,176,8],[98,133,176,50,"dragX"],[98,138,176,8],[98,139,174,29],[98,140,174,6],[100,0,179,6],[100,14,179,12,"dragOffsetFromOnStartPosition"],[100,43,179,41],[100,46,179,44,"startPositionX"],[100,60,179,58],[100,61,179,59,"interpolate"],[100,72,179,44],[100,73,179,71],[101,0,180,8,"inputRange"],[101,12,180,8,"inputRange"],[101,22,180,18],[101,24,180,20],[101,25,180,21,"drawerWidth"],[101,36,180,32],[101,39,180,35],[101,40,180,20],[101,42,180,38,"drawerWidth"],[101,53,180,20],[101,55,180,51,"drawerWidth"],[101,66,180,62],[101,69,180,65],[101,70,180,20],[101,71,179,71],[102,0,181,8,"outputRange"],[102,12,181,8,"outputRange"],[102,23,181,19],[102,25,181,21],[102,26,181,22],[102,27,181,21],[102,29,181,25],[102,30,181,21],[102,32,181,28],[102,33,181,21],[103,0,179,71],[103,11,179,44],[103,12,179,6],[104,0,183,6,"translationX"],[104,10,183,6,"translationX"],[104,22,183,18],[104,25,183,21,"Animated"],[104,47,183,30,"add"],[104,50,183,21],[104,51,183,34,"dragX"],[104,56,183,21],[104,58,183,41,"dragOffsetFromOnStartPosition"],[104,87,183,21],[104,88,183,6],[105,0,184,5],[107,0,186,4],[107,14,186,9,"_openValue"],[107,24,186,4],[107,27,186,22,"Animated"],[107,49,186,31,"add"],[107,52,186,22],[107,53,187,6,"translationX"],[107,65,186,22],[107,67,188,6,"drawerTranslation"],[107,84,186,22],[107,86,189,6,"interpolate"],[107,97,186,22],[107,98,189,18],[108,0,190,6,"inputRange"],[108,10,190,6,"inputRange"],[108,20,190,16],[108,22,190,18],[108,23,190,19],[108,24,190,18],[108,26,190,22,"drawerWidth"],[108,37,190,18],[108,38,189,18],[109,0,191,6,"outputRange"],[109,10,191,6,"outputRange"],[109,21,191,17],[109,23,191,19],[109,24,191,20],[109,25,191,19],[109,27,191,23],[109,28,191,19],[109,29,189,18],[110,0,192,6,"extrapolate"],[110,10,192,6,"extrapolate"],[110,21,192,17],[110,23,192,19],[111,0,189,18],[111,9,186,22],[111,10,186,4],[112,0,195,4],[112,14,195,9,"_onGestureEvent"],[112,29,195,4],[112,32,195,27,"Animated"],[112,54,195,36,"event"],[112,59,195,27],[112,60,196,6],[112,61,196,7],[113,0,196,9,"nativeEvent"],[113,10,196,9,"nativeEvent"],[113,21,196,20],[113,23,196,22],[114,0,196,24,"translationX"],[114,12,196,24,"translationX"],[114,24,196,36],[114,26,196,38,"dragXValue"],[114,36,196,22],[115,0,196,50,"x"],[115,12,196,50,"x"],[115,13,196,51],[115,15,196,53,"touchXValue"],[116,0,196,22],[117,0,196,7],[117,9,196,6],[117,10,195,27],[117,12,197,6],[118,0,197,8,"useNativeDriver"],[118,10,197,8,"useNativeDriver"],[118,25,197,23],[118,27,197,25,"props"],[118,32,197,30],[118,33,197,31,"useNativeAnimations"],[119,0,197,6],[119,9,195,27],[119,10,195,4],[120,0,199,3],[120,7,88,45],[122,0,88,45],[122,12,201,2,"_handleContainerLayout"],[122,34,88,45],[122,37,201,27],[122,53,201,48],[123,0,201,48],[123,12,201,30,"nativeEvent"],[123,23,201,48],[123,31,201,30,"nativeEvent"],[123,42,201,48],[125,0,202,4],[125,14,202,9,"setState"],[125,22,202,4],[125,23,202,18],[126,0,202,20,"containerWidth"],[126,10,202,20,"containerWidth"],[126,24,202,34],[126,26,202,36,"nativeEvent"],[126,37,202,47],[126,38,202,48,"layout"],[126,44,202,36],[126,45,202,55,"width"],[127,0,202,18],[127,9,202,4],[128,0,203,3],[128,7,88,45],[130,0,88,45],[130,12,205,2,"_emitStateChanged"],[130,29,88,45],[130,32,205,22],[130,42,205,23,"newState"],[130,50,205,22],[130,52,205,41,"drawerWillShow"],[130,66,205,22],[130,68,205,69],[131,0,206,4],[131,14,206,9,"props"],[131,19,206,4],[131,20,206,15,"onDrawerStateChanged"],[131,40,206,4],[131,44,207,6],[131,50,207,11,"props"],[131,55,207,6],[131,56,207,17,"onDrawerStateChanged"],[131,76,207,6],[131,77,207,38,"newState"],[131,85,207,6],[131,87,207,48,"drawerWillShow"],[131,101,207,6],[131,102,206,4],[132,0,208,3],[132,7,88,45],[134,0,88,45],[134,12,210,2,"_openingHandlerStateChange"],[134,38,88,45],[134,41,210,31],[134,58,210,52],[135,0,210,52],[135,12,210,34,"nativeEvent"],[135,23,210,52],[135,32,210,34,"nativeEvent"],[135,43,210,52],[137,0,211,4],[137,12,211,8,"nativeEvent"],[137,23,211,19],[137,24,211,20,"oldState"],[137,32,211,8],[137,37,211,33,"State"],[137,70,211,39,"ACTIVE"],[137,76,211,4],[137,78,211,47],[138,0,212,6],[138,16,212,11,"_handleRelease"],[138,30,212,6],[138,31,212,26,"nativeEvent"],[138,42,212,6],[139,0,213,5],[139,9,211,4],[139,15,213,11],[139,19,213,15,"nativeEvent"],[139,30,213,26],[139,31,213,27,"state"],[139,36,213,15],[139,41,213,37,"State"],[139,74,213,43,"ACTIVE"],[139,80,213,11],[139,82,213,51],[140,0,214,6],[140,16,214,11,"_emitStateChanged"],[140,33,214,6],[140,34,214,29,"DRAGGING"],[140,42,214,6],[140,44,214,39],[140,49,214,6],[142,0,215,6],[142,14,215,10],[142,20,215,15,"props"],[142,25,215,10],[142,26,215,21,"keyboardDismissMode"],[142,45,215,10],[142,50,215,45],[142,59,215,6],[142,61,215,56],[143,0,216,8,"Keyboard"],[143,34,216,17,"dismiss"],[143,41,216,8],[144,0,217,7],[146,0,218,6],[146,14,218,10],[146,20,218,15,"props"],[146,25,218,10],[146,26,218,21,"hideStatusBar"],[146,39,218,6],[146,41,218,36],[147,0,219,8,"StatusBar"],[147,35,219,18,"setHidden"],[147,44,219,8],[147,45,219,28],[147,49,219,8],[147,51,219,34],[147,57,219,39,"props"],[147,62,219,34],[147,63,219,45,"statusBarAnimation"],[147,81,219,34],[147,85,219,67],[147,92,219,8],[148,0,220,7],[149,0,221,5],[150,0,222,3],[150,7,88,45],[152,0,88,45],[152,12,224,2,"_onTapHandlerStateChange"],[152,36,88,45],[152,39,224,29],[152,56,224,50],[153,0,224,50],[153,12,224,32,"nativeEvent"],[153,23,224,50],[153,32,224,32,"nativeEvent"],[153,43,224,50],[155,0,225,4],[155,12,225,8],[155,18,225,13,"state"],[155,23,225,8],[155,24,225,19,"drawerShown"],[155,35,225,8],[155,39,225,34,"nativeEvent"],[155,50,225,45],[155,51,225,46,"oldState"],[155,59,225,34],[155,64,225,59,"State"],[155,97,225,65,"ACTIVE"],[155,103,225,4],[155,105,225,73],[156,0,226,6],[156,16,226,11,"closeDrawer"],[156,27,226,6],[157,0,227,5],[158,0,228,3],[158,7,88,45],[160,0,88,45],[160,12,230,2,"_handleRelease"],[160,26,88,45],[160,29,230,19],[160,39,230,19,"nativeEvent"],[160,50,230,30],[160,52,230,34],[161,0,230,34],[161,26,231,56],[161,32,231,61,"props"],[161,37,230,34],[162,0,230,34],[162,12,231,12,"drawerWidth"],[162,23,230,34],[162,38,231,12,"drawerWidth"],[162,49,230,34],[163,0,230,34],[163,12,231,25,"drawerPosition"],[163,26,230,34],[163,41,231,25,"drawerPosition"],[163,55,230,34],[164,0,230,34],[164,12,231,41,"drawerType"],[164,22,230,34],[164,37,231,41,"drawerType"],[164,47,230,34],[165,0,230,34],[165,26,232,44],[165,32,232,49,"state"],[165,37,230,34],[166,0,230,34],[166,12,232,12,"drawerShown"],[166,23,230,34],[166,38,232,12,"drawerShown"],[166,49,230,34],[167,0,230,34],[167,12,232,25,"containerWidth"],[167,26,230,34],[167,41,232,25,"containerWidth"],[167,55,230,34],[168,0,230,34],[168,12,233,24,"dragX"],[168,17,230,34],[168,20,233,56,"nativeEvent"],[168,31,230,34],[168,32,233,10,"translationX"],[168,44,230,34],[169,0,230,34],[169,12,233,31,"velocityX"],[169,21,230,34],[169,24,233,56,"nativeEvent"],[169,35,230,34],[169,36,233,31,"velocityX"],[169,45,230,34],[170,0,230,34],[170,12,233,45,"touchX"],[170,18,230,34],[170,21,233,56,"nativeEvent"],[170,32,230,34],[170,33,233,42,"x"],[170,34,230,34],[172,0,235,4],[172,12,235,8,"drawerPosition"],[172,26,235,22],[172,31,235,27],[172,37,235,4],[172,39,235,35],[173,0,238,6,"dragX"],[173,10,238,6,"dragX"],[173,15,238,11],[173,18,238,14],[173,19,238,15,"dragX"],[173,24,238,6],[174,0,239,6,"touchX"],[174,10,239,6,"touchX"],[174,16,239,12],[174,19,239,15,"containerWidth"],[174,33,239,29],[174,36,239,32,"touchX"],[174,42,239,6],[175,0,240,6,"velocityX"],[175,10,240,6,"velocityX"],[175,19,240,15],[175,22,240,18],[175,23,240,19,"velocityX"],[175,32,240,6],[176,0,241,5],[178,0,243,4],[178,12,243,10,"gestureStartX"],[178,25,243,23],[178,28,243,26,"touchX"],[178,34,243,32],[178,37,243,35,"dragX"],[178,42,243,4],[179,0,244,4],[179,12,244,8,"dragOffsetBasedOnStart"],[179,34,244,30],[179,37,244,33],[179,38,244,4],[181,0,246,4],[181,12,246,8,"drawerType"],[181,22,246,18],[181,27,246,23],[181,34,246,4],[181,36,246,32],[182,0,247,6,"dragOffsetBasedOnStart"],[182,10,247,6,"dragOffsetBasedOnStart"],[182,32,247,28],[182,35,248,8,"gestureStartX"],[182,48,248,21],[182,51,248,24,"drawerWidth"],[182,62,248,8],[182,65,248,38,"gestureStartX"],[182,78,248,51],[182,81,248,54,"drawerWidth"],[182,92,248,8],[182,95,248,68],[182,96,247,6],[183,0,249,5],[185,0,251,4],[185,12,251,10,"startOffsetX"],[185,24,251,22],[185,27,252,6,"dragX"],[185,32,252,11],[185,35,252,14,"dragOffsetBasedOnStart"],[185,57,252,6],[185,61,252,40,"drawerShown"],[185,72,252,51],[185,75,252,54,"drawerWidth"],[185,86,252,51],[185,89,252,68],[185,90,252,6],[185,91,251,4],[186,0,253,4],[186,12,253,10,"projOffsetX"],[186,23,253,21],[186,26,253,24,"startOffsetX"],[186,38,253,36],[186,41,253,39,"DRAG_TOSS"],[186,50,253,48],[186,53,253,51,"velocityX"],[186,62,253,4],[187,0,255,4],[187,12,255,10,"shouldOpen"],[187,22,255,20],[187,25,255,23,"projOffsetX"],[187,36,255,34],[187,39,255,37,"drawerWidth"],[187,50,255,48],[187,53,255,51],[187,54,255,4],[189,0,257,4],[189,12,257,8,"shouldOpen"],[189,22,257,4],[189,24,257,20],[190,0,258,6],[190,16,258,11,"_animateDrawer"],[190,30,258,6],[190,31,258,26,"startOffsetX"],[190,43,258,6],[190,45,258,40,"drawerWidth"],[190,56,258,6],[190,58,258,53,"velocityX"],[190,67,258,6],[191,0,259,5],[191,9,257,4],[191,15,259,11],[192,0,260,6],[192,16,260,11,"_animateDrawer"],[192,30,260,6],[192,31,260,26,"startOffsetX"],[192,43,260,6],[192,45,260,40],[192,46,260,6],[192,48,260,43,"velocityX"],[192,57,260,6],[193,0,261,5],[194,0,262,3],[194,7,88,45],[196,0,88,45],[196,12,264,2,"_animateDrawer"],[196,26,88,45],[196,29,264,19],[196,39,264,20,"fromValue"],[196,48,264,19],[196,50,264,39,"toValue"],[196,57,264,19],[196,59,264,56,"velocity"],[196,67,264,19],[196,69,264,77],[197,0,265,4],[197,14,265,9,"state"],[197,19,265,4],[197,20,265,15,"dragX"],[197,25,265,4],[197,26,265,21,"setValue"],[197,34,265,4],[197,35,265,30],[197,36,265,4],[199,0,266,4],[199,14,266,9,"state"],[199,19,266,4],[199,20,266,15,"touchX"],[199,26,266,4],[199,27,266,22,"setValue"],[199,35,266,4],[199,36,267,6],[199,42,267,11,"props"],[199,47,267,6],[199,48,267,17,"drawerPosition"],[199,62,267,6],[199,67,267,36],[199,73,267,6],[199,76,267,45],[199,77,267,6],[199,80,267,49],[199,86,267,54,"state"],[199,91,267,49],[199,92,267,60,"containerWidth"],[199,106,266,4],[201,0,269,4],[201,14,269,9,"state"],[201,19,269,4],[201,20,269,15,"drawerTranslation"],[201,37,269,4],[201,38,269,33,"setValue"],[201,46,269,4],[201,47,269,42,"fromValue"],[201,56,269,4],[203,0,271,4],[203,12,271,10,"willShow"],[203,20,271,18],[203,23,271,21,"toValue"],[203,30,271,28],[203,35,271,33],[203,36,271,4],[205,0,272,4],[205,14,272,9,"setState"],[205,22,272,4],[205,23,272,18],[206,0,272,20,"drawerShown"],[206,10,272,20,"drawerShown"],[206,21,272,31],[206,23,272,33,"willShow"],[207,0,272,18],[207,9,272,4],[209,0,273,4],[209,14,273,9,"_emitStateChanged"],[209,31,273,4],[209,32,273,27,"SETTLING"],[209,40,273,4],[209,42,273,37,"willShow"],[209,50,273,4],[211,0,274,4],[211,12,274,8],[211,18,274,13,"props"],[211,23,274,8],[211,24,274,19,"hideStatusBar"],[211,37,274,4],[211,39,274,34],[212,0,275,6,"StatusBar"],[212,33,275,16,"setHidden"],[212,42,275,6],[212,43,275,26,"willShow"],[212,51,275,6],[212,53,275,36],[212,59,275,41,"props"],[212,64,275,36],[212,65,275,47,"statusBarAnimation"],[212,83,275,36],[212,87,275,69],[212,94,275,6],[213,0,276,5],[215,0,277,4,"Animated"],[215,30,277,13,"spring"],[215,36,277,4],[215,37,277,20],[215,43,277,25,"state"],[215,48,277,20],[215,49,277,31,"drawerTranslation"],[215,66,277,4],[215,68,277,50],[216,0,278,6,"velocity"],[216,10,278,6,"velocity"],[216,18,278,14],[216,20,278,6,"velocity"],[216,28,277,50],[217,0,279,6,"bounciness"],[217,10,279,6,"bounciness"],[217,20,279,16],[217,22,279,18],[217,23,277,50],[218,0,280,6,"toValue"],[218,10,280,6,"toValue"],[218,17,280,13],[218,19,280,6,"toValue"],[218,26,277,50],[219,0,281,6,"useNativeDriver"],[219,10,281,6,"useNativeDriver"],[219,25,281,21],[219,27,281,23],[219,33,281,28,"props"],[219,38,281,23],[219,39,281,34,"useNativeAnimations"],[220,0,277,50],[220,9,277,4],[220,11,282,7,"start"],[220,16,277,4],[220,17,282,13],[220,34,282,31],[221,0,282,31],[221,14,282,16,"finished"],[221,22,282,31],[221,31,282,16,"finished"],[221,39,282,31],[223,0,283,6],[223,14,283,10,"finished"],[223,22,283,6],[223,24,283,20],[224,0,284,8],[224,18,284,13,"_emitStateChanged"],[224,35,284,8],[224,36,284,31,"IDLE"],[224,40,284,8],[224,42,284,37,"willShow"],[224,50,284,8],[226,0,285,8],[226,16,285,12,"willShow"],[226,24,285,8],[226,26,285,22],[227,0,286,10],[227,20,286,15,"props"],[227,25,286,10],[227,26,286,21,"onDrawerOpen"],[227,38,286,10],[227,42,286,37],[227,48,286,42,"props"],[227,53,286,37],[227,54,286,48,"onDrawerOpen"],[227,66,286,37],[227,68,286,10],[228,0,287,9],[228,13,285,8],[228,19,287,15],[229,0,288,10],[229,20,288,15,"props"],[229,25,288,10],[229,26,288,21,"onDrawerClose"],[229,39,288,10],[229,43,288,38],[229,49,288,43,"props"],[229,54,288,38],[229,55,288,49,"onDrawerClose"],[229,68,288,38],[229,70,288,10],[230,0,289,9],[231,0,290,7],[232,0,291,5],[232,9,277,4],[233,0,292,3],[233,7,88,45],[235,0,88,45],[235,12,294,2,"openDrawer"],[235,22,88,45],[235,25,294,15],[235,37,294,59],[236,0,294,59],[236,12,294,16,"options"],[236,19,294,59],[236,90,294,52],[236,92,294,59],[238,0,295,4],[238,14,295,9,"_animateDrawer"],[238,28,295,4],[238,29,296,6],[238,30,295,4],[238,32,297,6],[238,38,297,11,"props"],[238,43,297,6],[238,44,297,17,"drawerWidth"],[238,55,295,4],[238,57,298,6,"options"],[238,64,298,13],[238,65,298,14,"velocity"],[238,73,298,6],[238,76,298,25,"options"],[238,83,298,32],[238,84,298,33,"velocity"],[238,92,298,6],[238,95,298,44],[238,96,295,4],[239,0,300,3],[239,7,88,45],[241,0,88,45],[241,12,302,2,"closeDrawer"],[241,23,88,45],[241,26,302,16],[241,38,302,60],[242,0,302,60],[242,12,302,17,"options"],[242,19,302,60],[242,90,302,53],[242,92,302,60],[244,0,303,4],[244,14,303,9,"_animateDrawer"],[244,28,303,4],[244,29,304,6],[244,35,304,11,"props"],[244,40,304,6],[244,41,304,17,"drawerWidth"],[244,52,303,4],[244,54,305,6],[244,55,303,4],[244,57,306,6,"options"],[244,64,306,13],[244,65,306,14,"velocity"],[244,73,306,6],[244,76,306,25,"options"],[244,83,306,32],[244,84,306,33,"velocity"],[244,92,306,6],[244,95,306,44],[244,96,303,4],[245,0,308,3],[245,7,88,45],[247,0,88,45],[247,12,310,2,"_renderOverlay"],[247,26,88,45],[247,29,310,19],[247,41,310,25],[248,0,312,4],[248,32,312,14],[248,38,312,19,"_openValue"],[248,48,312,4],[248,50,312,31],[248,65,312,4],[250,0,313,4],[250,12,313,10,"overlayOpacity"],[250,26,313,24],[250,29,313,27],[250,35,313,32,"_openValue"],[250,45,313,27],[250,46,313,43,"interpolate"],[250,57,313,27],[250,58,313,55],[251,0,314,6,"inputRange"],[251,10,314,6,"inputRange"],[251,20,314,16],[251,22,314,18],[251,23,314,19],[251,24,314,18],[251,26,314,22],[251,27,314,18],[251,28,313,55],[252,0,315,6,"outputRange"],[252,10,315,6,"outputRange"],[252,21,315,17],[252,23,315,19],[252,24,315,20],[252,25,315,19],[252,27,315,23],[252,30,315,19],[252,31,313,55],[253,0,316,6,"extrapolate"],[253,10,316,6,"extrapolate"],[253,21,316,17],[253,23,316,19],[254,0,313,55],[254,9,313,27],[254,10,313,4],[256,0,318,4],[256,12,318,10,"dynamicOverlayStyles"],[256,32,318,30],[256,35,318,33],[257,0,319,6,"opacity"],[257,10,319,6,"opacity"],[257,17,319,13],[257,19,319,15,"overlayOpacity"],[257,33,318,33],[258,0,320,6,"backgroundColor"],[258,10,320,6,"backgroundColor"],[258,25,320,21],[258,27,320,23],[258,33,320,28,"props"],[258,38,320,23],[258,39,320,34,"overlayColor"],[259,0,318,33],[259,9,318,4],[260,0,322,4],[260,15,323,6],[260,44,323,7],[260,88,323,6],[261,0,323,25],[261,10,323,25],[261,30,323,45],[261,32,323,47],[261,38,323,52,"_onTapHandlerStateChange"],[261,62,323,6],[262,0,323,6],[263,0,323,6],[264,0,323,6],[265,0,323,6],[266,0,323,6],[266,11,324,8],[266,40,324,9],[266,61,324,8],[266,62,324,18],[266,66,324,8],[267,0,325,10],[267,10,325,10],[267,23,325,23],[267,25,325,25],[267,31,325,30,"state"],[267,36,325,25],[267,37,325,36,"drawerShown"],[267,48,325,25],[267,51,325,50],[267,57,325,25],[267,60,325,59],[267,66,324,8],[268,0,326,10],[268,10,326,10],[268,15,326,15],[268,17,326,17],[268,18,326,18,"styles"],[268,24,326,24],[268,25,326,25,"overlay"],[268,32,326,17],[268,34,326,34,"dynamicOverlayStyles"],[268,54,326,17],[268,55,324,8],[269,0,324,8],[270,0,324,8],[271,0,324,8],[272,0,324,8],[273,0,324,8],[273,10,323,6],[273,11,322,4],[274,0,330,3],[274,7,88,45],[276,0,88,45],[276,12,332,2,"_renderDrawer"],[276,25,88,45],[276,28,332,18],[276,40,332,24],[277,0,332,24],[277,12,333,12,"drawerShown"],[277,23,332,24],[277,26,333,28],[277,32,333,33,"state"],[277,37,332,24],[277,38,333,12,"drawerShown"],[277,49,332,24],[278,0,332,24],[278,27,340,8],[278,33,340,13,"props"],[278,38,332,24],[279,0,332,24],[279,12,335,6,"drawerBackgroundColor"],[279,33,332,24],[279,49,335,6,"drawerBackgroundColor"],[279,70,332,24],[280,0,332,24],[280,12,336,6,"drawerWidth"],[280,23,332,24],[280,39,336,6,"drawerWidth"],[280,50,332,24],[281,0,332,24],[281,12,337,6,"drawerPosition"],[281,26,332,24],[281,42,337,6,"drawerPosition"],[281,56,332,24],[282,0,332,24],[282,12,338,6,"drawerType"],[282,22,332,24],[282,38,338,6,"drawerType"],[282,48,332,24],[283,0,332,24],[283,12,339,6,"contentContainerStyle"],[283,33,332,24],[283,49,339,6,"contentContainerStyle"],[283,70,332,24],[284,0,342,4],[284,12,342,10,"fromLeft"],[284,20,342,18],[284,23,342,21,"drawerPosition"],[284,37,342,35],[284,42,342,40],[284,48,342,4],[285,0,343,4],[285,12,343,10,"drawerSlide"],[285,23,343,21],[285,26,343,24,"drawerType"],[285,36,343,34],[285,41,343,39],[285,47,343,4],[286,0,344,4],[286,12,344,10,"containerSlide"],[286,26,344,24],[286,29,344,27,"drawerType"],[286,39,344,37],[286,44,344,42],[286,51,344,4],[287,0,346,4],[287,12,346,10,"dynamicDrawerStyles"],[287,31,346,29],[287,34,346,32],[288,0,347,6,"backgroundColor"],[288,10,347,6,"backgroundColor"],[288,25,347,21],[288,27,347,23,"drawerBackgroundColor"],[288,48,346,32],[289,0,348,6,"width"],[289,10,348,6,"width"],[289,15,348,11],[289,17,348,13,"drawerWidth"],[290,0,346,32],[290,9,346,4],[291,0,350,4],[291,12,350,10,"openValue"],[291,21,350,19],[291,24,350,22],[291,30,350,27,"_openValue"],[291,40,350,4],[292,0,351,4],[292,32,351,14,"openValue"],[292,41,351,4],[292,43,351,25],[292,58,351,4],[293,0,353,4],[293,12,353,8,"containerStyles"],[293,27,353,4],[295,0,354,4],[295,12,354,8,"containerSlide"],[295,26,354,4],[295,28,354,24],[296,0,355,6],[296,14,355,12,"containerTranslateX"],[296,33,355,31],[296,36,355,34,"openValue"],[296,45,355,43],[296,46,355,44,"interpolate"],[296,57,355,34],[296,58,355,56],[297,0,356,8,"inputRange"],[297,12,356,8,"inputRange"],[297,22,356,18],[297,24,356,20],[297,25,356,21],[297,26,356,20],[297,28,356,24],[297,29,356,20],[297,30,355,56],[298,0,357,8,"outputRange"],[298,12,357,8,"outputRange"],[298,23,357,19],[298,25,357,21,"fromLeft"],[298,33,357,29],[298,36,357,32],[298,37,357,33],[298,38,357,32],[298,40,357,36,"drawerWidth"],[298,51,357,32],[298,52,357,29],[298,55,357,51],[298,56,357,52],[298,57,357,51],[298,59,357,55],[298,60,357,56,"drawerWidth"],[298,71,357,51],[298,72,355,56],[299,0,358,8,"extrapolate"],[299,12,358,8,"extrapolate"],[299,23,358,19],[299,25,358,21],[300,0,355,56],[300,11,355,34],[300,12,355,6],[301,0,360,6,"containerStyles"],[301,10,360,6,"containerStyles"],[301,25,360,21],[301,28,360,24],[302,0,361,8,"transform"],[302,12,361,8,"transform"],[302,21,361,17],[302,23,361,19],[302,24,361,20],[303,0,361,22,"translateX"],[303,14,361,22,"translateX"],[303,24,361,32],[303,26,361,34,"containerTranslateX"],[304,0,361,20],[304,13,361,19],[305,0,360,24],[305,11,360,6],[306,0,363,5],[308,0,365,4],[308,12,365,8,"drawerTranslateX"],[308,28,365,24],[308,31,365,27],[308,32,365,4],[310,0,366,4],[310,12,366,8,"drawerSlide"],[310,23,366,4],[310,25,366,21],[311,0,367,6],[311,14,367,12,"closedDrawerOffset"],[311,32,367,30],[311,35,367,33,"fromLeft"],[311,43,367,41],[311,46,367,44],[311,47,367,45,"drawerWidth"],[311,58,367,41],[311,61,367,59,"drawerWidth"],[311,72,367,6],[312,0,368,6,"drawerTranslateX"],[312,10,368,6,"drawerTranslateX"],[312,26,368,22],[312,29,368,25,"openValue"],[312,38,368,34],[312,39,368,35,"interpolate"],[312,50,368,25],[312,51,368,47],[313,0,369,8,"inputRange"],[313,12,369,8,"inputRange"],[313,22,369,18],[313,24,369,20],[313,25,369,21],[313,26,369,20],[313,28,369,24],[313,29,369,20],[313,30,368,47],[314,0,370,8,"outputRange"],[314,12,370,8,"outputRange"],[314,23,370,19],[314,25,370,21],[314,26,370,22,"closedDrawerOffset"],[314,44,370,21],[314,46,370,42],[314,47,370,21],[314,48,368,47],[315,0,371,8,"extrapolate"],[315,12,371,8,"extrapolate"],[315,23,371,19],[315,25,371,21],[316,0,368,47],[316,11,368,25],[316,12,368,6],[317,0,373,5],[319,0,374,4],[319,12,374,10,"drawerStyles"],[319,24,374,22],[319,27,374,25],[320,0,375,6,"transform"],[320,10,375,6,"transform"],[320,19,375,15],[320,21,375,17],[320,22,375,18],[321,0,375,20,"translateX"],[321,12,375,20,"translateX"],[321,22,375,30],[321,24,375,32,"drawerTranslateX"],[322,0,375,18],[322,11,375,17],[322,12,374,25],[323,0,376,6,"flexDirection"],[323,10,376,6,"flexDirection"],[323,23,376,19],[323,25,376,21,"fromLeft"],[323,33,376,29],[323,36,376,32],[323,41,376,29],[323,44,376,40],[324,0,374,25],[324,9,374,4],[325,0,379,4],[325,15,380,6],[325,44,380,7],[325,65,380,6],[325,66,380,16],[325,70,380,6],[326,0,380,21],[326,10,380,21],[326,15,380,26],[326,17,380,28,"styles"],[326,23,380,34],[326,24,380,35,"main"],[326,28,380,6],[327,0,380,41],[327,10,380,41],[327,18,380,49],[327,20,380,51],[327,26,380,56,"_handleContainerLayout"],[327,48,380,6],[328,0,380,6],[329,0,380,6],[330,0,380,6],[331,0,380,6],[332,0,380,6],[332,11,381,8],[332,40,381,9],[332,61,381,8],[332,62,381,18],[332,66,381,8],[333,0,382,10],[333,10,382,10],[333,15,382,15],[333,17,382,17],[333,18,383,12,"drawerType"],[333,28,383,22],[333,33,383,27],[333,40,383,12],[333,43,384,16,"styles"],[333,49,384,22],[333,50,384,23,"containerOnBack"],[333,65,383,12],[333,68,385,16,"styles"],[333,74,385,22],[333,75,385,23,"containerInFront"],[333,91,382,17],[333,93,386,12,"containerStyles"],[333,108,382,17],[333,110,387,12,"contentContainerStyle"],[333,131,382,17],[333,132,381,8],[334,0,381,8],[335,0,381,8],[336,0,381,8],[337,0,381,8],[338,0,381,8],[338,11,389,11],[338,17,389,16,"props"],[338,22,389,11],[338,23,389,22,"children"],[338,31,381,8],[338,33,390,11],[338,39,390,16,"_renderOverlay"],[338,53,390,11],[338,55,381,8],[338,56,380,6],[338,58,392,8],[338,87,392,9],[338,108,392,8],[338,109,392,18],[338,113,392,8],[339,0,393,10],[339,10,393,10],[339,23,393,23],[339,25,393,24],[339,35,392,8],[340,0,394,10],[340,10,394,10],[340,34,394,34],[340,36,394,36,"drawerShown"],[340,47,392,8],[341,0,395,10],[341,10,395,10],[341,15,395,15],[341,17,395,17],[341,18,395,18,"styles"],[341,24,395,24],[341,25,395,25,"drawerContainer"],[341,40,395,17],[341,42,395,42,"drawerStyles"],[341,54,395,17],[341,55,392,8],[342,0,392,8],[343,0,392,8],[344,0,392,8],[345,0,392,8],[346,0,392,8],[346,11,396,10],[346,40,396,11],[346,57,396,10],[347,0,396,16],[347,10,396,16],[347,15,396,21],[347,17,396,23],[347,18,396,24,"styles"],[347,24,396,30],[347,25,396,31,"drawer"],[347,31,396,23],[347,33,396,39,"dynamicDrawerStyles"],[347,52,396,23],[347,53,396,10],[348,0,396,10],[349,0,396,10],[350,0,396,10],[351,0,396,10],[352,0,396,10],[352,11,397,13],[352,17,397,18,"props"],[352,22,397,13],[352,23,397,24,"renderNavigationView"],[352,43,397,13],[352,44,397,45],[352,50,397,50,"_openValue"],[352,60,397,13],[352,61,396,10],[352,62,392,8],[352,63,380,6],[352,64,379,4],[353,0,402,3],[353,7,88,45],[355,0,91,4],[355,10,91,10,"dragX"],[355,16,91,15],[355,19,91,18],[355,23,91,22,"Animated"],[355,45,91,31,"Value"],[355,50,91,18],[355,51,91,37],[355,52,91,18],[355,53,91,4],[357,0,92,4],[357,10,92,10,"touchX"],[357,17,92,16],[357,20,92,19],[357,24,92,23,"Animated"],[357,46,92,32,"Value"],[357,51,92,19],[357,52,92,38],[357,53,92,19],[357,54,92,4],[359,0,93,4],[359,10,93,10,"drawerTranslation"],[359,28,93,27],[359,31,93,30],[359,35,93,34,"Animated"],[359,57,93,43,"Value"],[359,62,93,30],[359,63,93,49],[359,64,93,30],[359,65,93,4],[361,0,95,4],[361,12,95,9,"state"],[361,17,95,4],[361,20,95,17],[362,0,96,6,"dragX"],[362,8,96,6,"dragX"],[362,13,96,11],[362,15,96,6,"dragX"],[362,21,95,17],[363,0,97,6,"touchX"],[363,8,97,6,"touchX"],[363,14,97,12],[363,16,97,6,"touchX"],[363,23,95,17],[364,0,98,6,"drawerTranslation"],[364,8,98,6,"drawerTranslation"],[364,25,98,23],[364,27,98,6,"drawerTranslation"],[364,45,95,17],[365,0,99,6,"drawerShown"],[365,8,99,6,"drawerShown"],[365,19,99,17],[365,21,99,19],[365,26,95,17],[366,0,100,6,"containerWidth"],[366,8,100,6,"containerWidth"],[366,22,100,20],[366,24,100,22],[367,0,95,17],[367,7,95,4],[369,0,103,4],[369,12,103,9,"_updateAnimatedEvent"],[369,32,103,4],[369,33,103,30,"props"],[369,39,103,4],[369,41,103,37],[369,47,103,42,"state"],[369,52,103,4],[371,0,88,45],[372,0,104,3],[376,42,106,22,"props"],[376,47],[376,49,106,39,"state"],[376,54],[376,56,106,57],[377,0,107,4],[377,12,108,6],[377,17,108,11,"props"],[377,22,108,6],[377,23,108,17,"drawerPosition"],[377,37,108,6],[377,42,108,36,"props"],[377,47,108,41],[377,48,108,42,"drawerPosition"],[377,62,108,6],[377,66,109,6],[377,71,109,11,"props"],[377,76,109,6],[377,77,109,17,"drawerWidth"],[377,88,109,6],[377,93,109,33,"props"],[377,98,109,38],[377,99,109,39,"drawerWidth"],[377,110,108,6],[377,114,110,6],[377,119,110,11,"props"],[377,124,110,6],[377,125,110,17,"drawerType"],[377,135,110,6],[377,140,110,32,"props"],[377,145,110,37],[377,146,110,38,"drawerType"],[377,156,108,6],[377,160,111,6],[377,165,111,11,"state"],[377,170,111,6],[377,171,111,17,"containerWidth"],[377,185,111,6],[377,190,111,36,"state"],[377,195,111,41],[377,196,111,42,"containerWidth"],[377,210,107,4],[377,212,112,6],[378,0,113,6],[378,15,113,11,"_updateAnimatedEvent"],[378,35,113,6],[378,36,113,32,"props"],[378,41,113,6],[378,43,113,39,"state"],[378,48,113,6],[379,0,114,5],[380,0,115,3],[383,31,404,11],[384,0,404,11],[384,27,405,44],[384,32,405,49,"state"],[384,37,404,11],[385,0,404,11],[385,12,405,12,"drawerShown"],[385,23,404,11],[385,39,405,12,"drawerShown"],[385,50,404,11],[386,0,404,11],[386,12,405,25,"containerWidth"],[386,26,404,11],[386,42,405,25,"containerWidth"],[386,56,404,11],[387,0,404,11],[387,27,412,8],[387,32,412,13,"props"],[387,37,404,11],[388,0,404,11],[388,12,408,6,"drawerPosition"],[388,26,404,11],[388,42,408,6,"drawerPosition"],[388,56,404,11],[389,0,404,11],[389,12,409,6,"drawerType"],[389,22,404,11],[389,38,409,6,"drawerType"],[389,48,404,11],[390,0,404,11],[390,12,410,6,"edgeWidth"],[390,21,404,11],[390,37,410,6,"edgeWidth"],[390,46,404,11],[391,0,404,11],[391,12,411,6,"minSwipeDistance"],[391,28,404,11],[391,44,411,6,"minSwipeDistance"],[391,60,404,11],[392,0,414,4],[392,12,414,10,"fromLeft"],[392,20,414,18],[392,23,414,21,"drawerPosition"],[392,37,414,35],[392,42,414,40],[392,48,414,4],[393,0,419,4],[393,12,419,10,"gestureOrientation"],[393,30,419,28],[393,33,419,31],[393,34,419,32,"fromLeft"],[393,42,419,40],[393,45,419,43],[393,46,419,40],[393,49,419,47],[393,50,419,48],[393,51,419,31],[393,56,419,54,"drawerShown"],[393,67,419,65],[393,70,419,68],[393,71,419,69],[393,72,419,65],[393,75,419,73],[393,76,419,31],[393,77,419,4],[394,0,424,4],[394,12,424,10,"hitSlop"],[394,19,424,17],[394,22,424,20,"fromLeft"],[394,30,424,28],[394,33,425,8],[395,0,425,10,"right"],[395,10,425,10,"right"],[395,15,425,15],[395,17,425,17,"drawerShown"],[395,28,425,28],[395,31,425,31],[395,32,425,28],[395,35,425,35,"edgeWidth"],[395,44,425,44],[395,47,425,47,"containerWidth"],[396,0,425,8],[396,9,424,28],[396,12,426,8],[397,0,426,10,"left"],[397,10,426,10,"left"],[397,14,426,14],[397,16,426,16,"drawerShown"],[397,27,426,27],[397,30,426,30],[397,31,426,27],[397,34,426,34,"edgeWidth"],[397,43,426,43],[397,46,426,46,"containerWidth"],[398,0,426,8],[398,9,424,4],[399,0,428,4],[399,15,429,6],[399,44,429,7],[399,88,429,6],[400,0,430,8],[400,10,430,8],[400,17,430,15],[400,19,430,17,"hitSlop"],[400,26,429,6],[401,0,431,8],[401,10,431,8],[401,20,431,18],[401,22,431,20,"gestureOrientation"],[401,40,431,38],[401,43,431,41,"minSwipeDistance"],[401,59,429,6],[402,0,432,8],[402,10,432,8],[402,24,432,22],[402,26,432,24],[402,31,432,29,"_onGestureEvent"],[402,46,429,6],[403,0,433,8],[403,10,433,8],[403,30,433,28],[403,32,433,30],[403,37,433,35,"_openingHandlerStateChange"],[403,63,429,6],[404,0,429,6],[405,0,429,6],[406,0,429,6],[407,0,429,6],[408,0,429,6],[408,11,434,9],[408,16,434,14,"_renderDrawer"],[408,29,434,9],[408,31,429,6],[408,32,428,4],[409,0,437,3],[412,4,70,42,"Component"],[412,20],[412,30,71,9,"defaultProps"],[412,42],[412,45,71,24],[413,0,72,4,"drawerWidth"],[413,4,72,4,"drawerWidth"],[413,15,72,15],[413,17,72,17],[413,20,71,24],[414,0,73,4,"drawerPosition"],[414,4,73,4,"drawerPosition"],[414,18,73,18],[414,20,73,20],[414,26,71,24],[415,0,74,4,"useNativeAnimations"],[415,4,74,4,"useNativeAnimations"],[415,23,74,23],[415,25,74,25],[415,29,71,24],[416,0,75,4,"drawerType"],[416,4,75,4,"drawerType"],[416,14,75,14],[416,16,75,16],[416,23,71,24],[417,0,76,4,"edgeWidth"],[417,4,76,4,"edgeWidth"],[417,13,76,13],[417,15,76,15],[417,17,71,24],[418,0,77,4,"minSwipeDistance"],[418,4,77,4,"minSwipeDistance"],[418,20,77,20],[418,22,77,22],[418,23,71,24],[419,0,78,4,"overlayColor"],[419,4,78,4,"overlayColor"],[419,16,78,16],[419,18,78,18],[420,0,71,24],[420,3],[420,12,81,9,"positions"],[420,21],[420,24,81,21],[421,0,82,4,"Left"],[421,4,82,4,"Left"],[421,8,82,8],[421,10,82,10],[421,16,81,21],[422,0,83,4,"Right"],[422,4,83,4,"Right"],[422,9,83,9],[422,11,83,11],[423,0,81,21],[423,3],[428,0,440,0],[428,6,440,6,"styles"],[428,12,440,12],[428,15,440,15,"StyleSheet"],[428,39,440,26,"create"],[428,45,440,15],[428,46,440,33],[429,0,441,2,"drawer"],[429,4,441,2,"drawer"],[429,10,441,8],[429,12,441,10],[430,0,441,12,"flex"],[430,6,441,12,"flex"],[430,10,441,16],[430,12,441,18],[431,0,441,10],[431,5,440,33],[432,0,442,2,"drawerContainer"],[432,4,442,2,"drawerContainer"],[432,19,442,17],[432,39,443,7,"StyleSheet"],[432,63,443,18,"absoluteFillObject"],[432,81,442,17],[433,0,444,4,"zIndex"],[433,6,444,4,"zIndex"],[433,12,444,10],[433,14,444,12],[433,18,442,17],[434,0,445,4,"flexDirection"],[434,6,445,4,"flexDirection"],[434,19,445,17],[434,21,445,19],[435,0,442,17],[435,6,440,33],[436,0,447,2,"containerInFront"],[436,4,447,2,"containerInFront"],[436,20,447,18],[436,40,448,7,"StyleSheet"],[436,64,448,18,"absoluteFillObject"],[436,82,447,18],[437,0,449,4,"zIndex"],[437,6,449,4,"zIndex"],[437,12,449,10],[437,14,449,12],[438,0,447,18],[438,6,440,33],[439,0,451,2,"containerOnBack"],[439,4,451,2,"containerOnBack"],[439,19,451,17],[439,39,452,7,"StyleSheet"],[439,63,452,18,"absoluteFillObject"],[439,81,451,17],[439,82,440,33],[440,0,454,2,"main"],[440,4,454,2,"main"],[440,8,454,6],[440,10,454,8],[441,0,455,4,"flex"],[441,6,455,4,"flex"],[441,10,455,8],[441,12,455,10],[441,13,454,8],[442,0,456,4,"zIndex"],[442,6,456,4,"zIndex"],[442,12,456,10],[442,14,456,12],[442,15,454,8],[443,0,457,4,"overflow"],[443,6,457,4,"overflow"],[443,14,457,12],[443,16,457,14],[444,0,454,8],[444,5,440,33],[445,0,459,2,"overlay"],[445,4,459,2,"overlay"],[445,11,459,9],[445,31,460,7,"StyleSheet"],[445,55,460,18,"absoluteFillObject"],[445,73,459,9],[446,0,461,4,"zIndex"],[446,6,461,4,"zIndex"],[446,12,461,10],[446,14,461,12],[447,0,459,9],[448,0,440,33],[448,3,440,15],[448,4,440,0]]},"type":"js/module"}]}