{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"./extractBrush","data":{"isAsync":false}},{"name":"./extractOpacity","data":{"isAsync":false}},{"name":"../props","data":{"isAsync":false}},{"name":"./extractLengthList","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n\n  var _extractBrush = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./extractBrush\"));\n\n  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./extractOpacity\"));\n\n  var _props = _$$_REQUIRE(_dependencyMap[3], \"../props\");\n\n  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./extractLengthList\"));\n\n  var caps = {\n    butt: 0,\n    square: 2,\n    round: 1\n  };\n  var joins = {\n    miter: 0,\n    bevel: 2,\n    round: 1\n  };\n  var strokeKeys = Object.keys(_props.strokeProps);\n\n  function _default(props, styleProperties) {\n    strokeKeys.forEach(function (name) {\n      if (props.hasOwnProperty(name)) {\n        styleProperties.push(name);\n      }\n    });\n    var stroke = props.stroke;\n    var strokeWidth = props.strokeWidth,\n        strokeDasharray = props.strokeDasharray;\n\n    if (!strokeDasharray || strokeDasharray === \"none\") {\n      strokeDasharray = null;\n    } else {\n      strokeDasharray = (0, _extractLengthList.default)(strokeDasharray);\n\n      if (strokeDasharray && strokeDasharray.length % 2 === 1) {\n        strokeDasharray = strokeDasharray.concat(strokeDasharray);\n      }\n    }\n\n    if (!strokeWidth || typeof strokeWidth !== \"string\") {\n      strokeWidth = \"\" + (strokeWidth || 1);\n    }\n\n    return {\n      stroke: (0, _extractBrush.default)(stroke),\n      strokeOpacity: (0, _extractOpacity.default)(props.strokeOpacity),\n      strokeLinecap: caps[props.strokeLinecap] || 0,\n      strokeLinejoin: joins[props.strokeLinejoin] || 0,\n      strokeDasharray: strokeDasharray,\n      strokeWidth: strokeWidth,\n      strokeDashoffset: strokeDasharray ? +props.strokeDashoffset || 0 : null,\n      strokeMiterlimit: parseFloat(props.strokeMiterlimit) || 4\n    };\n  }\n});","map":[[9,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,4,0],[17,0,6,0],[17,6,6,6,"caps"],[17,10,6,10],[17,13,6,13],[18,0,7,4,"butt"],[18,4,7,4,"butt"],[18,8,7,8],[18,10,7,10],[18,11,6,13],[19,0,8,4,"square"],[19,4,8,4,"square"],[19,10,8,10],[19,12,8,12],[19,13,6,13],[20,0,9,4,"round"],[20,4,9,4,"round"],[20,9,9,9],[20,11,9,11],[21,0,6,13],[21,3,6,0],[22,0,12,0],[22,6,12,6,"joins"],[22,11,12,11],[22,14,12,14],[23,0,13,4,"miter"],[23,4,13,4,"miter"],[23,9,13,9],[23,11,13,11],[23,12,12,14],[24,0,14,4,"bevel"],[24,4,14,4,"bevel"],[24,9,14,9],[24,11,14,11],[24,12,12,14],[25,0,15,4,"round"],[25,4,15,4,"round"],[25,9,15,9],[25,11,15,11],[26,0,12,14],[26,3,12,0],[27,0,18,0],[27,6,18,6,"strokeKeys"],[27,16,18,16],[27,19,18,19,"Object"],[27,25,18,25],[27,26,18,26,"keys"],[27,30,18,19],[27,31,18,31,"strokeProps"],[27,49,18,19],[27,50,18,0],[29,0,20,15],[29,20,20,24,"props"],[29,25,20,15],[29,27,20,31,"styleProperties"],[29,42,20,15],[29,44,20,48],[30,0,21,4,"strokeKeys"],[30,4,21,4,"strokeKeys"],[30,14,21,14],[30,15,21,15,"forEach"],[30,22,21,4],[30,23,21,23],[30,33,21,23,"name"],[30,37,21,27],[30,39,21,31],[31,0,22,8],[31,10,22,12,"props"],[31,15,22,17],[31,16,22,18,"hasOwnProperty"],[31,30,22,12],[31,31,22,33,"name"],[31,35,22,12],[31,36,22,8],[31,38,22,40],[32,0,23,12,"styleProperties"],[32,8,23,12,"styleProperties"],[32,23,23,27],[32,24,23,28,"push"],[32,28,23,12],[32,29,23,33,"name"],[32,33,23,12],[33,0,24,9],[34,0,25,5],[34,5,21,4],[35,0,20,48],[35,8,27,12,"stroke"],[35,14,20,48],[35,17,27,23,"props"],[35,22,20,48],[35,23,27,12,"stroke"],[35,29,20,48],[36,0,20,48],[36,8,28,10,"strokeWidth"],[36,19,20,48],[36,22,28,43,"props"],[36,27,20,48],[36,28,28,10,"strokeWidth"],[36,39,20,48],[37,0,20,48],[37,8,28,23,"strokeDasharray"],[37,23,20,48],[37,26,28,43,"props"],[37,31,20,48],[37,32,28,23,"strokeDasharray"],[37,47,20,48],[39,0,30,4],[39,8,30,8],[39,9,30,9,"strokeDasharray"],[39,24,30,8],[39,28,30,28,"strokeDasharray"],[39,43,30,43],[39,48,30,48],[39,54,30,4],[39,56,30,56],[40,0,31,8,"strokeDasharray"],[40,6,31,8,"strokeDasharray"],[40,21,31,23],[40,24,31,26],[40,28,31,8],[41,0,32,5],[41,5,30,4],[41,11,32,11],[42,0,37,8,"strokeDasharray"],[42,6,37,8,"strokeDasharray"],[42,21,37,23],[42,24,37,26],[42,56,37,44,"strokeDasharray"],[42,71,37,26],[42,72,37,8],[44,0,38,8],[44,10,38,12,"strokeDasharray"],[44,25,38,27],[44,29,38,31,"strokeDasharray"],[44,44,38,46],[44,45,38,47,"length"],[44,51,38,31],[44,54,38,56],[44,55,38,31],[44,60,38,62],[44,61,38,8],[44,63,38,65],[45,0,39,12,"strokeDasharray"],[45,8,39,12,"strokeDasharray"],[45,23,39,27],[45,26,39,30,"strokeDasharray"],[45,41,39,45],[45,42,39,46,"concat"],[45,48,39,30],[45,49,39,53,"strokeDasharray"],[45,64,39,30],[45,65,39,12],[46,0,40,9],[47,0,41,5],[49,0,43,4],[49,8,43,8],[49,9,43,9,"strokeWidth"],[49,20,43,8],[49,24,43,24],[49,31,43,31,"strokeWidth"],[49,42,43,24],[49,47,43,47],[49,55,43,4],[49,57,43,57],[50,0,44,8,"strokeWidth"],[50,6,44,8,"strokeWidth"],[50,17,44,19],[50,26,44,25,"strokeWidth"],[50,37,44,36],[50,41,44,40],[50,42,44,19],[50,43,44,8],[51,0,45,5],[53,0,47,4],[53,11,47,11],[54,0,48,8,"stroke"],[54,6,48,8,"stroke"],[54,12,48,14],[54,14,48,16],[54,41,48,29,"stroke"],[54,47,48,16],[54,48,47,11],[55,0,49,8,"strokeOpacity"],[55,6,49,8,"strokeOpacity"],[55,19,49,21],[55,21,49,23],[55,50,49,38,"props"],[55,55,49,43],[55,56,49,44,"strokeOpacity"],[55,69,49,23],[55,70,47,11],[56,0,50,8,"strokeLinecap"],[56,6,50,8,"strokeLinecap"],[56,19,50,21],[56,21,50,23,"caps"],[56,25,50,27],[56,26,50,28,"props"],[56,31,50,33],[56,32,50,34,"strokeLinecap"],[56,45,50,27],[56,46,50,23],[56,50,50,52],[56,51,47,11],[57,0,51,8,"strokeLinejoin"],[57,6,51,8,"strokeLinejoin"],[57,20,51,22],[57,22,51,24,"joins"],[57,27,51,29],[57,28,51,30,"props"],[57,33,51,35],[57,34,51,36,"strokeLinejoin"],[57,48,51,29],[57,49,51,24],[57,53,51,55],[57,54,47,11],[58,0,52,8,"strokeDasharray"],[58,6,52,8,"strokeDasharray"],[58,21,52,23],[58,23,52,25,"strokeDasharray"],[58,38,47,11],[59,0,53,8,"strokeWidth"],[59,6,53,8,"strokeWidth"],[59,17,53,19],[59,19,53,21,"strokeWidth"],[59,30,47,11],[60,0,54,8,"strokeDashoffset"],[60,6,54,8,"strokeDashoffset"],[60,22,54,24],[60,24,54,26,"strokeDasharray"],[60,39,54,41],[60,42,54,44],[60,43,54,45,"props"],[60,48,54,50],[60,49,54,51,"strokeDashoffset"],[60,65,54,44],[60,69,54,71],[60,70,54,41],[60,73,54,75],[60,77,47,11],[61,0,55,8,"strokeMiterlimit"],[61,6,55,8,"strokeMiterlimit"],[61,22,55,24],[61,24,55,26,"parseFloat"],[61,34,55,36],[61,35,55,37,"props"],[61,40,55,42],[61,41,55,43,"strokeMiterlimit"],[61,57,55,36],[61,58,55,26],[61,62,55,64],[62,0,47,11],[62,5,47,4],[63,0,57,1]]},"type":"js/module"}]}