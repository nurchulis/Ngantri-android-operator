{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function QRBitBuffer() {\n    this.buffer = new Array();\n    this.length = 0;\n  }\n\n  QRBitBuffer.prototype = {\n    get: function get(index) {\n      var bufIndex = Math.floor(index / 8);\n      return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n    },\n    put: function put(num, length) {\n      for (var i = 0; i < length; i++) {\n        this.putBit((num >>> length - i - 1 & 1) == 1);\n      }\n    },\n    getLengthInBits: function getLengthInBits() {\n      return this.length;\n    },\n    putBit: function putBit(bit) {\n      var bufIndex = Math.floor(this.length / 8);\n\n      if (this.buffer.length <= bufIndex) {\n        this.buffer.push(0);\n      }\n\n      if (bit) {\n        this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n      }\n\n      this.length++;\n    }\n  };\n  module.exports = QRBitBuffer;\n});","map":[[2,0,1,0],[2,11,1,9,"QRBitBuffer"],[2,22,1,0],[2,25,1,23],[3,0,2,1],[3,9,2,6,"buffer"],[3,15,2,1],[3,18,2,15],[3,22,2,19,"Array"],[3,27,2,15],[3,29,2,1],[4,0,3,1],[4,9,3,6,"length"],[4,15,3,1],[4,18,3,15],[4,19,3,1],[5,0,4,1],[7,0,6,0,"QRBitBuffer"],[7,2,6,0,"QRBitBuffer"],[7,13,6,11],[7,14,6,12,"prototype"],[7,23,6,0],[7,26,6,24],[8,0,8,1,"get"],[8,4,8,1,"get"],[8,7,8,4],[8,9,8,7],[8,22,8,16,"index"],[8,27,8,7],[8,29,8,23],[9,0,9,2],[9,10,9,6,"bufIndex"],[9,18,9,14],[9,21,9,17,"Math"],[9,25,9,21],[9,26,9,22,"floor"],[9,31,9,17],[9,32,9,28,"index"],[9,37,9,33],[9,40,9,36],[9,41,9,17],[9,42,9,2],[10,0,10,2],[10,13,10,9],[10,14,10,12],[10,19,10,17,"buffer"],[10,25,10,12],[10,26,10,24,"bufIndex"],[10,34,10,12],[10,40,10,39],[10,44,10,43,"index"],[10,49,10,48],[10,52,10,51],[10,53,10,11],[10,56,10,58],[10,57,10,9],[10,62,10,64],[10,63,10,2],[11,0,11,2],[11,5,6,24],[12,0,13,1,"put"],[12,4,13,1,"put"],[12,7,13,4],[12,9,13,7],[12,22,13,16,"num"],[12,25,13,7],[12,27,13,21,"length"],[12,33,13,7],[12,35,13,29],[13,0,14,2],[13,11,14,7],[13,15,14,11,"i"],[13,16,14,12],[13,19,14,15],[13,20,14,2],[13,22,14,18,"i"],[13,23,14,19],[13,26,14,22,"length"],[13,32,14,2],[13,34,14,30,"i"],[13,35,14,31],[13,37,14,2],[13,39,14,35],[14,0,15,3],[14,13,15,8,"putBit"],[14,19,15,3],[14,20,15,16],[14,21,15,19,"num"],[14,24,15,22],[14,29,15,28,"length"],[14,35,15,34],[14,38,15,37,"i"],[14,39,15,28],[14,42,15,41],[14,43,15,18],[14,46,15,48],[14,47,15,16],[14,52,15,54],[14,53,15,3],[15,0,16,3],[16,0,17,2],[16,5,6,24],[17,0,19,1,"getLengthInBits"],[17,4,19,1,"getLengthInBits"],[17,19,19,16],[17,21,19,19],[17,48,19,30],[18,0,20,2],[18,13,20,9],[18,18,20,14,"length"],[18,24,20,2],[19,0,21,2],[19,5,6,24],[20,0,23,1,"putBit"],[20,4,23,1,"putBit"],[20,10,23,7],[20,12,23,10],[20,28,23,19,"bit"],[20,31,23,10],[20,33,23,24],[21,0,25,2],[21,10,25,6,"bufIndex"],[21,18,25,14],[21,21,25,17,"Math"],[21,25,25,21],[21,26,25,22,"floor"],[21,31,25,17],[21,32,25,28],[21,37,25,33,"length"],[21,43,25,28],[21,46,25,42],[21,47,25,17],[21,48,25,2],[23,0,26,2],[23,10,26,6],[23,15,26,11,"buffer"],[23,21,26,6],[23,22,26,18,"length"],[23,28,26,6],[23,32,26,28,"bufIndex"],[23,40,26,2],[23,42,26,38],[24,0,27,3],[24,13,27,8,"buffer"],[24,19,27,3],[24,20,27,15,"push"],[24,24,27,3],[24,25,27,20],[24,26,27,3],[25,0,28,3],[27,0,30,2],[27,10,30,6,"bit"],[27,13,30,2],[27,15,30,11],[28,0,31,3],[28,13,31,8,"buffer"],[28,19,31,3],[28,20,31,15,"bufIndex"],[28,28,31,3],[28,33,31,29],[28,42,31,39],[28,47,31,44,"length"],[28,53,31,39],[28,56,31,53],[28,57,31,3],[29,0,32,3],[31,0,34,2],[31,11,34,7,"length"],[31,17,34,2],[32,0,35,2],[33,0,6,24],[33,3,6,0],[34,0,38,0,"module"],[34,2,38,0,"module"],[34,8,38,6],[34,9,38,7,"exports"],[34,16,38,0],[34,19,38,17,"QRBitBuffer"],[34,30,38,0]]},"type":"js/module"}]}